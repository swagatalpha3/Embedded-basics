ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 3


  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
  36              		.loc 1 112 0
  37 0002 0D49     		ldr	r1, .L3
  38 0004 0020     		movs	r0, #0
  39 0006 FFF7FEFF 		bl	CyIntSetVector
  40              	.LVL0:
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
  41              		.loc 1 113 0
  42 000a 0721     		movs	r1, #7
  43 000c 0020     		movs	r0, #0
  44 000e FFF7FEFF 		bl	CyIntSetPriority
  45              	.LVL1:
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
  46              		.loc 1 114 0
  47 0012 0023     		movs	r3, #0
  48 0014 094A     		ldr	r2, .L3+4
  49 0016 1370     		strb	r3, [r2]
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 4


 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  50              		.loc 1 124 0
  51 0018 7221     		movs	r1, #114
  52 001a 094A     		ldr	r2, .L3+8
  53 001c 1170     		strb	r1, [r2]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  54              		.loc 1 126 0
  55 001e 2021     		movs	r1, #32
  56 0020 013A     		subs	r2, r2, #1
  57 0022 1170     		strb	r1, [r2]
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  58              		.loc 1 138 0
  59 0024 0621     		movs	r1, #6
  60 0026 5E3A     		subs	r2, r2, #94
  61 0028 1170     		strb	r1, [r2]
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  62              		.loc 1 139 0
  63 002a 4721     		movs	r1, #71
  64 002c 1032     		adds	r2, r2, #16
  65 002e 1170     		strb	r1, [r2]
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
  66              		.loc 1 150 0
  67 0030 4D32     		adds	r2, r2, #77
  68 0032 1370     		strb	r3, [r2]
  69 0034 08BD     		pop	{r3, pc}
  70              	.L4:
  71 0036 00BF     		.align	2
  72              	.L3:
  73 0038 00000000 		.word	UART_RXISR
  74 003c 00000000 		.word	.LANCHOR0
  75 0040 8A650040 		.word	1073767818
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	UART_Init, .-UART_Init
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 5


  79              		.section	.text.UART_Enable,"ax",%progbits
  80              		.align	2
  81              		.global	UART_Enable
  82              		.thumb
  83              		.thumb_func
  84              		.type	UART_Enable, %function
  85              	UART_Enable:
  86              	.LFB2:
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
  87              		.loc 1 184 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 10B5     		push	{r4, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 4, -8
  94              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  95              		.loc 1 186 0
  96 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  97              	.LVL2:
  98 0006 0446     		mov	r4, r0
  99              	.LVL3:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 6


 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 100              		.loc 1 190 0
 101 0008 0B4A     		ldr	r2, .L7
 102 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 103 000c 43F02003 		orr	r3, r3, #32
 104 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 105              		.loc 1 193 0
 106 0012 013A     		subs	r2, r2, #1
 107 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 108 0016 43F01003 		orr	r3, r3, #16
 109 001a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 110              		.loc 1 196 0
 111 001c 0122     		movs	r2, #1
 112 001e 074B     		ldr	r3, .L7+4
 113 0020 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 114              		.loc 1 211 0
 115 0022 074A     		ldr	r2, .L7+8
 116 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 117 0026 43F01003 		orr	r3, r3, #16
 118 002a 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 119              		.loc 1 219 0
 120 002c FFF7FEFF 		bl	UART_IntClock_Start
 121              	.LVL4:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 7


 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 122              		.loc 1 222 0
 123 0030 2046     		mov	r0, r4
 124 0032 FFF7FEFF 		bl	CyExitCriticalSection
 125              	.LVL5:
 126 0036 10BD     		pop	{r4, pc}
 127              	.LVL6:
 128              	.L8:
 129              		.align	2
 130              	.L7:
 131 0038 9A650040 		.word	1073767834
 132 003c 00E100E0 		.word	-536813312
 133 0040 98650040 		.word	1073767832
 134              		.cfi_endproc
 135              	.LFE2:
 136              		.size	UART_Enable, .-UART_Enable
 137              		.section	.text.UART_Start,"ax",%progbits
 138              		.align	2
 139              		.global	UART_Start
 140              		.thumb
 141              		.thumb_func
 142              		.type	UART_Start, %function
 143              	UART_Start:
 144              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 145              		.loc 1 77 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 08B5     		push	{r3, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 3, -8
 152              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 153              		.loc 1 79 0
 154 0002 054B     		ldr	r3, .L12
 155 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 156 0006 23B9     		cbnz	r3, .L10
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 157              		.loc 1 81 0
 158 0008 FFF7FEFF 		bl	UART_Init
 159              	.LVL7:
  82:Generated_Source\PSoC5/UART.c ****     }
 160              		.loc 1 82 0
 161 000c 0122     		movs	r2, #1
 162 000e 024B     		ldr	r3, .L12
 163 0010 5A70     		strb	r2, [r3, #1]
 164              	.L10:
  85:Generated_Source\PSoC5/UART.c **** }
 165              		.loc 1 85 0
 166 0012 FFF7FEFF 		bl	UART_Enable
 167              	.LVL8:
 168 0016 08BD     		pop	{r3, pc}
 169              	.L13:
 170              		.align	2
 171              	.L12:
 172 0018 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 8


 173              		.cfi_endproc
 174              	.LFE0:
 175              		.size	UART_Start, .-UART_Start
 176              		.section	.text.UART_Stop,"ax",%progbits
 177              		.align	2
 178              		.global	UART_Stop
 179              		.thumb
 180              		.thumb_func
 181              		.type	UART_Stop, %function
 182              	UART_Stop:
 183              	.LFB3:
 223:Generated_Source\PSoC5/UART.c **** }
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 184              		.loc 1 241 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 10B5     		push	{r4, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 192              		.loc 1 243 0
 193 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 194              	.LVL9:
 195 0006 0446     		mov	r4, r0
 196              	.LVL10:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 197              		.loc 1 247 0
 198 0008 0B4A     		ldr	r2, .L16
 199 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 200 000c 03F0DF03 		and	r3, r3, #223
 201 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 9


 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 202              		.loc 1 257 0
 203 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 204              	.LVL11:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 205              		.loc 1 262 0
 206 0016 094A     		ldr	r2, .L16+4
 207 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 208 001a 03F0EF03 		and	r3, r3, #239
 209 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 210              		.loc 1 265 0
 211 0020 0122     		movs	r2, #1
 212 0022 074B     		ldr	r3, .L16+8
 213 0024 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 214              		.loc 1 270 0
 215 0026 074A     		ldr	r2, .L16+12
 216 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 217 002a 03F0EF03 		and	r3, r3, #239
 218 002e 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 277 0
 220 0030 2046     		mov	r0, r4
 221 0032 FFF7FEFF 		bl	CyExitCriticalSection
 222              	.LVL12:
 223 0036 10BD     		pop	{r4, pc}
 224              	.LVL13:
 225              	.L17:
 226              		.align	2
 227              	.L16:
 228 0038 9A650040 		.word	1073767834
 229 003c 99650040 		.word	1073767833
 230 0040 80E100E0 		.word	-536813184
 231 0044 98650040 		.word	1073767832
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 10


 232              		.cfi_endproc
 233              	.LFE3:
 234              		.size	UART_Stop, .-UART_Stop
 235              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 236              		.align	2
 237              		.global	UART_ReadControlRegister
 238              		.thumb
 239              		.thumb_func
 240              		.type	UART_ReadControlRegister, %function
 241              	UART_ReadControlRegister:
 242              	.LFB4:
 278:Generated_Source\PSoC5/UART.c **** }
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 243              		.loc 1 296 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 248              		.loc 1 302 0
 249 0000 0020     		movs	r0, #0
 250 0002 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE4:
 253              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 254              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 255              		.align	2
 256              		.global	UART_WriteControlRegister
 257              		.thumb
 258              		.thumb_func
 259              		.type	UART_WriteControlRegister, %function
 260              	UART_WriteControlRegister:
 261              	.LFB5:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 11


 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 262              		.loc 1 320 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267              	.LVL14:
 268 0000 7047     		bx	lr
 269              		.cfi_endproc
 270              	.LFE5:
 271              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 272 0002 00BF     		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 273              		.align	2
 274              		.global	UART_SetRxInterruptMode
 275              		.thumb
 276              		.thumb_func
 277              		.type	UART_SetRxInterruptMode, %function
 278              	UART_SetRxInterruptMode:
 279              	.LFB6:
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 12


 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 280              		.loc 1 360 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LVL15:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 286              		.loc 1 361 0
 287 0000 014B     		ldr	r3, .L21
 288 0002 1870     		strb	r0, [r3]
 289 0004 7047     		bx	lr
 290              	.L22:
 291 0006 00BF     		.align	2
 292              	.L21:
 293 0008 89650040 		.word	1073767817
 294              		.cfi_endproc
 295              	.LFE6:
 296              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 297              		.section	.text.UART_ReadRxData,"ax",%progbits
 298              		.align	2
 299              		.global	UART_ReadRxData
 300              		.thumb
 301              		.thumb_func
 302              		.type	UART_ReadRxData, %function
 303              	UART_ReadRxData:
 304              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 13


 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 305              		.loc 1 393 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 310              		.loc 1 402 0
 311 0000 0122     		movs	r2, #1
 312 0002 134B     		ldr	r3, .L29
 313 0004 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 314              		.loc 1 404 0
 315 0006 134A     		ldr	r2, .L29+4
 316 0008 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 317 000a DBB2     		uxtb	r3, r3
 318              	.LVL16:
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 319              		.loc 1 405 0
 320 000c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 321 000e C9B2     		uxtb	r1, r1
 322              	.LVL17:
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 323              		.loc 1 407 0
 324 0010 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 325 0012 12F0FF0F 		tst	r2, #255
 326 0016 01D1     		bne	.L24
 327              		.loc 1 407 0 is_stmt 0 discriminator 1
 328 0018 8B42     		cmp	r3, r1
 329 001a 11D0     		beq	.L25
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 14


 330              	.L24:
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 331              		.loc 1 409 0 is_stmt 1
 332 001c 0E4A     		ldr	r2, .L29+8
 333 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 334 0020 C0B2     		uxtb	r0, r0
 335              	.LVL18:
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 336              		.loc 1 410 0
 337 0022 0133     		adds	r3, r3, #1
 338              	.LVL19:
 339 0024 DBB2     		uxtb	r3, r3
 340              	.LVL20:
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 341              		.loc 1 412 0
 342 0026 632B     		cmp	r3, #99
 343 0028 00D9     		bls	.L26
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 344              		.loc 1 414 0
 345 002a 0023     		movs	r3, #0
 346              	.LVL21:
 347              	.L26:
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 348              		.loc 1 417 0
 349 002c 094A     		ldr	r2, .L29+4
 350 002e 9370     		strb	r3, [r2, #2]
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 351              		.loc 1 419 0
 352 0030 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 353              	.LVL22:
 354 0032 13F0FF0F 		tst	r3, #255
 355 0036 06D0     		beq	.L27
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 356              		.loc 1 421 0
 357 0038 0022     		movs	r2, #0
 358 003a 064B     		ldr	r3, .L29+4
 359 003c 1A71     		strb	r2, [r3, #4]
 360              	.LVL23:
 361 003e 02E0     		b	.L27
 362              	.LVL24:
 363              	.L25:
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 15


 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 364              		.loc 1 440 0
 365 0040 064B     		ldr	r3, .L29+12
 366              	.LVL25:
 367 0042 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 368 0044 C0B2     		uxtb	r0, r0
 369              	.LVL26:
 370              	.L27:
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 371              		.loc 1 443 0
 372 0046 0122     		movs	r2, #1
 373 0048 054B     		ldr	r3, .L29+16
 374 004a 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 375              		.loc 1 453 0
 376 004c 7047     		bx	lr
 377              	.L30:
 378 004e 00BF     		.align	2
 379              	.L29:
 380 0050 80E100E0 		.word	-536813184
 381 0054 00000000 		.word	.LANCHOR0
 382 0058 00000000 		.word	UART_rxBuffer
 383 005c 4A650040 		.word	1073767754
 384 0060 00E100E0 		.word	-536813312
 385              		.cfi_endproc
 386              	.LFE7:
 387              		.size	UART_ReadRxData, .-UART_ReadRxData
 388              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 389              		.align	2
 390              		.global	UART_ReadRxStatus
 391              		.thumb
 392              		.thumb_func
 393              		.type	UART_ReadRxStatus, %function
 394              	UART_ReadRxStatus:
 395              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 16


 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 396              		.loc 1 486 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 401              		.loc 1 489 0
 402 0000 074B     		ldr	r3, .L33
 403 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 404 0004 00F07F00 		and	r0, r0, #127
 405              	.LVL27:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 406              		.loc 1 492 0
 407 0008 064B     		ldr	r3, .L33+4
 408 000a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 409 000c 13F0FF0F 		tst	r3, #255
 410 0010 04D0     		beq	.L32
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 411              		.loc 1 494 0
 412 0012 40F08000 		orr	r0, r0, #128
 413              	.LVL28:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 17


 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 414              		.loc 1 495 0
 415 0016 0022     		movs	r2, #0
 416 0018 024B     		ldr	r3, .L33+4
 417 001a 5A71     		strb	r2, [r3, #5]
 418              	.L32:
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 419              		.loc 1 500 0
 420 001c 7047     		bx	lr
 421              	.L34:
 422 001e 00BF     		.align	2
 423              	.L33:
 424 0020 69650040 		.word	1073767785
 425 0024 00000000 		.word	.LANCHOR0
 426              		.cfi_endproc
 427              	.LFE8:
 428              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 429              		.section	.text.UART_GetChar,"ax",%progbits
 430              		.align	2
 431              		.global	UART_GetChar
 432              		.thumb
 433              		.thumb_func
 434              		.type	UART_GetChar, %function
 435              	UART_GetChar:
 436              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 18


 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 437              		.loc 1 533 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442              	.LVL29:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 443              		.loc 1 542 0
 444 0000 0122     		movs	r2, #1
 445 0002 194B     		ldr	r3, .L43
 446 0004 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 447              		.loc 1 544 0
 448 0006 194A     		ldr	r2, .L43+4
 449 0008 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 450 000a DBB2     		uxtb	r3, r3
 451              	.LVL30:
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 452              		.loc 1 545 0
 453 000c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 454 000e C9B2     		uxtb	r1, r1
 455              	.LVL31:
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 456              		.loc 1 547 0
 457 0010 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 458 0012 12F0FF0F 		tst	r2, #255
 459 0016 01D1     		bne	.L36
 460              		.loc 1 547 0 is_stmt 0 discriminator 1
 461 0018 8B42     		cmp	r3, r1
 462 001a 11D0     		beq	.L37
 463              	.L36:
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 464              		.loc 1 549 0 is_stmt 1
 465 001c 144A     		ldr	r2, .L43+8
 466 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 467 0020 C0B2     		uxtb	r0, r0
 468              	.LVL32:
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 469              		.loc 1 550 0
 470 0022 0133     		adds	r3, r3, #1
 471              	.LVL33:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 19


 472 0024 DBB2     		uxtb	r3, r3
 473              	.LVL34:
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 474              		.loc 1 551 0
 475 0026 632B     		cmp	r3, #99
 476 0028 00D9     		bls	.L38
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 477              		.loc 1 553 0
 478 002a 0023     		movs	r3, #0
 479              	.LVL35:
 480              	.L38:
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 481              		.loc 1 556 0
 482 002c 0F4A     		ldr	r2, .L43+4
 483 002e 9370     		strb	r3, [r2, #2]
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 484              		.loc 1 558 0
 485 0030 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 486              	.LVL36:
 487 0032 13F0FF0F 		tst	r3, #255
 488 0036 13D0     		beq	.L39
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 489              		.loc 1 560 0
 490 0038 0022     		movs	r2, #0
 491 003a 0C4B     		ldr	r3, .L43+4
 492 003c 1A71     		strb	r2, [r3, #4]
 493              	.LVL37:
 494 003e 0FE0     		b	.L39
 495              	.LVL38:
 496              	.L37:
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 497              		.loc 1 579 0
 498 0040 0C4B     		ldr	r3, .L43+12
 499              	.LVL39:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 20


 500 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0044 DBB2     		uxtb	r3, r3
 502              	.LVL40:
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 503              		.loc 1 580 0
 504 0046 13F0200F 		tst	r3, #32
 505 004a 06D0     		beq	.L41
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 506              		.loc 1 582 0
 507 004c 0A4A     		ldr	r2, .L43+16
 508 004e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 509 0050 C0B2     		uxtb	r0, r0
 510              	.LVL41:
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 511              		.loc 1 584 0
 512 0052 13F01E0F 		tst	r3, #30
 513 0056 02D1     		bne	.L42
 514 0058 02E0     		b	.L39
 515              	.LVL42:
 516              	.L41:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 517              		.loc 1 534 0
 518 005a 0020     		movs	r0, #0
 519 005c 00E0     		b	.L39
 520              	.LVL43:
 521              	.L42:
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 522              		.loc 1 587 0
 523 005e 0020     		movs	r0, #0
 524              	.LVL44:
 525              	.L39:
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 526              		.loc 1 592 0
 527 0060 0122     		movs	r2, #1
 528 0062 064B     		ldr	r3, .L43+20
 529 0064 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 21


 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 530              		.loc 1 612 0
 531 0066 7047     		bx	lr
 532              	.L44:
 533              		.align	2
 534              	.L43:
 535 0068 80E100E0 		.word	-536813184
 536 006c 00000000 		.word	.LANCHOR0
 537 0070 00000000 		.word	UART_rxBuffer
 538 0074 69650040 		.word	1073767785
 539 0078 4A650040 		.word	1073767754
 540 007c 00E100E0 		.word	-536813312
 541              		.cfi_endproc
 542              	.LFE9:
 543              		.size	UART_GetChar, .-UART_GetChar
 544              		.section	.text.UART_GetByte,"ax",%progbits
 545              		.align	2
 546              		.global	UART_GetByte
 547              		.thumb
 548              		.thumb_func
 549              		.type	UART_GetByte, %function
 550              	UART_GetByte:
 551              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 552              		.loc 1 635 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 22


 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 4, -8
 559              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 560              		.loc 1 640 0
 561 0002 0123     		movs	r3, #1
 562 0004 064A     		ldr	r2, .L47
 563 0006 1360     		str	r3, [r2]
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 564              		.loc 1 641 0
 565 0008 064A     		ldr	r2, .L47+4
 566 000a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 567              	.LVL45:
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 568              		.loc 1 642 0
 569 000c 0021     		movs	r1, #0
 570 000e 1170     		strb	r1, [r2]
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 571              		.loc 1 643 0
 572 0010 054A     		ldr	r2, .L47+8
 573 0012 1360     		str	r3, [r2]
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 574              		.loc 1 644 0
 575 0014 2402     		lsls	r4, r4, #8
 576              	.LVL46:
 577 0016 FFF7FEFF 		bl	UART_ReadRxData
 578              	.LVL47:
 579 001a 2043     		orrs	r0, r0, r4
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 580              		.loc 1 649 0
 581 001c 80B2     		uxth	r0, r0
 582 001e 10BD     		pop	{r4, pc}
 583              	.L48:
 584              		.align	2
 585              	.L47:
 586 0020 80E100E0 		.word	-536813184
 587 0024 00000000 		.word	.LANCHOR0
 588 0028 00E100E0 		.word	-536813312
 589              		.cfi_endproc
 590              	.LFE10:
 591              		.size	UART_GetByte, .-UART_GetByte
 592              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 593              		.align	2
 594              		.global	UART_GetRxBufferSize
 595              		.thumb
 596              		.thumb_func
 597              		.type	UART_GetRxBufferSize, %function
 598              	UART_GetRxBufferSize:
 599              	.LFB11:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 23


 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 600              		.loc 1 685 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 605              		.loc 1 691 0
 606 0000 0122     		movs	r2, #1
 607 0002 144B     		ldr	r3, .L54
 608 0004 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 609              		.loc 1 693 0
 610 0006 144B     		ldr	r3, .L54+4
 611 0008 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 612 000a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 24


 613 000c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 614 000e DBB2     		uxtb	r3, r3
 615 0010 9A42     		cmp	r2, r3
 616 0012 06D1     		bne	.L50
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 617              		.loc 1 695 0
 618 0014 104B     		ldr	r3, .L54+4
 619 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 620 0018 13F0FF0F 		tst	r3, #255
 621 001c 15D0     		beq	.L53
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 622              		.loc 1 697 0
 623 001e 6420     		movs	r0, #100
 624 0020 14E0     		b	.L51
 625              	.L50:
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 626              		.loc 1 704 0
 627 0022 0D4B     		ldr	r3, .L54+4
 628 0024 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 629 0026 D2B2     		uxtb	r2, r2
 630 0028 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 631 002a DBB2     		uxtb	r3, r3
 632 002c 9A42     		cmp	r2, r3
 633 002e 05D2     		bcs	.L52
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 634              		.loc 1 706 0
 635 0030 094A     		ldr	r2, .L54+4
 636 0032 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 637 0034 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 638 0036 181A     		subs	r0, r3, r0
 639 0038 C0B2     		uxtb	r0, r0
 640              	.LVL48:
 641 003a 07E0     		b	.L51
 642              	.LVL49:
 643              	.L52:
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 644              		.loc 1 710 0
 645 003c 064A     		ldr	r2, .L54+4
 646 003e D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 647 0040 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 648 0042 181A     		subs	r0, r3, r0
 649 0044 6430     		adds	r0, r0, #100
 650 0046 C0B2     		uxtb	r0, r0
 651              	.LVL50:
 652 0048 00E0     		b	.L51
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 25


 653              	.LVL51:
 654              	.L53:
 701:Generated_Source\PSoC5/UART.c ****             }
 655              		.loc 1 701 0
 656 004a 0020     		movs	r0, #0
 657              	.L51:
 658              	.LVL52:
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 659              		.loc 1 713 0
 660 004c 0122     		movs	r2, #1
 661 004e 034B     		ldr	r3, .L54+8
 662 0050 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 663              		.loc 1 723 0
 664 0052 7047     		bx	lr
 665              	.L55:
 666              		.align	2
 667              	.L54:
 668 0054 80E100E0 		.word	-536813184
 669 0058 00000000 		.word	.LANCHOR0
 670 005c 00E100E0 		.word	-536813312
 671              		.cfi_endproc
 672              	.LFE11:
 673              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 674              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 675              		.align	2
 676              		.global	UART_ClearRxBuffer
 677              		.thumb
 678              		.thumb_func
 679              		.type	UART_ClearRxBuffer, %function
 680              	UART_ClearRxBuffer:
 681              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 26


 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 682              		.loc 1 758 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686 0000 08B5     		push	{r3, lr}
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 3, -8
 689              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 690              		.loc 1 762 0
 691 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 692              	.LVL53:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 693              		.loc 1 763 0
 694 0006 0B4B     		ldr	r3, .L58
 695 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 696 000a 42F00102 		orr	r2, r2, #1
 697 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 698              		.loc 1 764 0
 699 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 700 0012 02F0FE02 		and	r2, r2, #254
 701 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 702              		.loc 1 765 0
 703 0018 FFF7FEFF 		bl	CyExitCriticalSection
 704              	.LVL54:
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 705              		.loc 1 770 0
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 27


 706 001c 0121     		movs	r1, #1
 707 001e 064B     		ldr	r3, .L58+4
 708 0020 1960     		str	r1, [r3]
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 709              		.loc 1 772 0
 710 0022 064B     		ldr	r3, .L58+8
 711 0024 0022     		movs	r2, #0
 712 0026 9A70     		strb	r2, [r3, #2]
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 713              		.loc 1 773 0
 714 0028 DA70     		strb	r2, [r3, #3]
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 715              		.loc 1 774 0
 716 002a 1A71     		strb	r2, [r3, #4]
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 717              		.loc 1 775 0
 718 002c 5A71     		strb	r2, [r3, #5]
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 719              		.loc 1 777 0
 720 002e 044B     		ldr	r3, .L58+12
 721 0030 1960     		str	r1, [r3]
 722 0032 08BD     		pop	{r3, pc}
 723              	.L59:
 724              		.align	2
 725              	.L58:
 726 0034 9A650040 		.word	1073767834
 727 0038 80E100E0 		.word	-536813184
 728 003c 00000000 		.word	.LANCHOR0
 729 0040 00E100E0 		.word	-536813312
 730              		.cfi_endproc
 731              	.LFE12:
 732              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 733              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 734              		.align	2
 735              		.global	UART_SetRxAddressMode
 736              		.thumb
 737              		.thumb_func
 738              		.type	UART_SetRxAddressMode, %function
 739              	UART_SetRxAddressMode:
 740              	.LFB13:
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 28


 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 741              		.loc 1 815 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746              	.LVL55:
 747 0000 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE13:
 750              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 751 0002 00BF     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 752              		.align	2
 753              		.global	UART_SetRxAddress1
 754              		.thumb
 755              		.thumb_func
 756              		.type	UART_SetRxAddress1, %function
 757              	UART_SetRxAddress1:
 758              	.LFB14:
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 29


 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 759              		.loc 1 858 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
 764              	.LVL56:
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 765              		.loc 1 859 0
 766 0000 014B     		ldr	r3, .L62
 767 0002 1870     		strb	r0, [r3]
 768 0004 7047     		bx	lr
 769              	.L63:
 770 0006 00BF     		.align	2
 771              	.L62:
 772 0008 2A650040 		.word	1073767722
 773              		.cfi_endproc
 774              	.LFE14:
 775              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 776              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 777              		.align	2
 778              		.global	UART_SetRxAddress2
 779              		.thumb
 780              		.thumb_func
 781              		.type	UART_SetRxAddress2, %function
 782              	UART_SetRxAddress2:
 783              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 30


 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 784              		.loc 1 878 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789              	.LVL57:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 790              		.loc 1 879 0
 791 0000 014B     		ldr	r3, .L65
 792 0002 1870     		strb	r0, [r3]
 793 0004 7047     		bx	lr
 794              	.L66:
 795 0006 00BF     		.align	2
 796              	.L65:
 797 0008 3A650040 		.word	1073767738
 798              		.cfi_endproc
 799              	.LFE15:
 800              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 801              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 802              		.align	2
 803              		.global	UART_SetTxInterruptMode
 804              		.thumb
 805              		.thumb_func
 806              		.type	UART_SetTxInterruptMode, %function
 807              	UART_SetTxInterruptMode:
 808              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 31


 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 809              		.loc 1 909 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LVL58:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 815              		.loc 1 910 0
 816 0000 014B     		ldr	r3, .L68
 817 0002 1870     		strb	r0, [r3]
 818 0004 7047     		bx	lr
 819              	.L69:
 820 0006 00BF     		.align	2
 821              	.L68:
 822 0008 88650040 		.word	1073767816
 823              		.cfi_endproc
 824              	.LFE16:
 825              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 826              		.section	.text.UART_WriteTxData,"ax",%progbits
 827              		.align	2
 828              		.global	UART_WriteTxData
 829              		.thumb
 830              		.thumb_func
 831              		.type	UART_WriteTxData, %function
 832              	UART_WriteTxData:
 833              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 32


 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 834              		.loc 1 943 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 839              	.LVL59:
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 840              		.loc 1 945 0
 841 0000 024B     		ldr	r3, .L72
 842 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 843 0004 0BB1     		cbz	r3, .L70
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 33


 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 844              		.loc 1 976 0
 845 0006 024B     		ldr	r3, .L72+4
 846 0008 1870     		strb	r0, [r3]
 847              	.L70:
 848 000a 7047     		bx	lr
 849              	.L73:
 850              		.align	2
 851              	.L72:
 852 000c 00000000 		.word	.LANCHOR0
 853 0010 48650040 		.word	1073767752
 854              		.cfi_endproc
 855              	.LFE17:
 856              		.size	UART_WriteTxData, .-UART_WriteTxData
 857              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 858              		.align	2
 859              		.global	UART_ReadTxStatus
 860              		.thumb
 861              		.thumb_func
 862              		.type	UART_ReadTxStatus, %function
 863              	UART_ReadTxStatus:
 864              	.LFB18:
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 865              		.loc 1 1004 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 34


 870              		.loc 1 1005 0
 871 0000 014B     		ldr	r3, .L75
 872 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 873              		.loc 1 1006 0
 874 0004 7047     		bx	lr
 875              	.L76:
 876 0006 00BF     		.align	2
 877              	.L75:
 878 0008 68650040 		.word	1073767784
 879              		.cfi_endproc
 880              	.LFE18:
 881              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 882              		.section	.text.UART_PutChar,"ax",%progbits
 883              		.align	2
 884              		.global	UART_PutChar
 885              		.thumb
 886              		.thumb_func
 887              		.type	UART_PutChar, %function
 888              	UART_PutChar:
 889              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 35


 890              		.loc 1 1042 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              		@ link register save eliminated.
 895              	.LVL60:
 896              	.L78:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 36


1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 897              		.loc 1 1107 0 discriminator 1
 898 0000 034B     		ldr	r3, .L79
 899 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 900 0004 13F0040F 		tst	r3, #4
 901 0008 FAD1     		bne	.L78
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 902              		.loc 1 1113 0
 903 000a 024B     		ldr	r3, .L79+4
 904 000c 1870     		strb	r0, [r3]
 905 000e 7047     		bx	lr
 906              	.L80:
 907              		.align	2
 908              	.L79:
 909 0010 68650040 		.word	1073767784
 910 0014 48650040 		.word	1073767752
 911              		.cfi_endproc
 912              	.LFE19:
 913              		.size	UART_PutChar, .-UART_PutChar
 914              		.section	.text.UART_PutString,"ax",%progbits
 915              		.align	2
 916              		.global	UART_PutString
 917              		.thumb
 918              		.thumb_func
 919              		.type	UART_PutString, %function
 920              	UART_PutString:
 921              	.LFB20:
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 37


1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 922              		.loc 1 1146 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              	.LVL61:
 927 0000 38B5     		push	{r3, r4, r5, lr}
 928              		.cfi_def_cfa_offset 16
 929              		.cfi_offset 3, -16
 930              		.cfi_offset 4, -12
 931              		.cfi_offset 5, -8
 932              		.cfi_offset 14, -4
 933              	.LVL62:
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 934              		.loc 1 1150 0
 935 0002 074B     		ldr	r3, .L87
 936 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 937 0006 2BB9     		cbnz	r3, .L85
 938 0008 38BD     		pop	{r3, r4, r5, pc}
 939              	.LVL63:
 940              	.L84:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 941              		.loc 1 1155 0
 942 000a FFF7FEFF 		bl	UART_PutChar
 943              	.LVL64:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 944              		.loc 1 1156 0
 945 000e 0134     		adds	r4, r4, #1
 946              	.LVL65:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 38


 947 0010 A4B2     		uxth	r4, r4
 948              	.LVL66:
 949 0012 01E0     		b	.L82
 950              	.LVL67:
 951              	.L85:
 952 0014 0546     		mov	r5, r0
 953 0016 0024     		movs	r4, #0
 954              	.LVL68:
 955              	.L82:
1153:Generated_Source\PSoC5/UART.c ****             {
 956              		.loc 1 1153 0
 957 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 958 001a 0028     		cmp	r0, #0
 959 001c F5D1     		bne	.L84
 960 001e 38BD     		pop	{r3, r4, r5, pc}
 961              	.LVL69:
 962              	.L88:
 963              		.align	2
 964              	.L87:
 965 0020 00000000 		.word	.LANCHOR0
 966              		.cfi_endproc
 967              	.LFE20:
 968              		.size	UART_PutString, .-UART_PutString
 969              		.section	.text.UART_PutArray,"ax",%progbits
 970              		.align	2
 971              		.global	UART_PutArray
 972              		.thumb
 973              		.thumb_func
 974              		.type	UART_PutArray, %function
 975              	UART_PutArray:
 976              	.LFB21:
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 39


1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 977              		.loc 1 1193 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              	.LVL70:
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 982              		.loc 1 1197 0
 983 0000 084B     		ldr	r3, .L95
 984 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 985 0004 33B9     		cbnz	r3, .L93
 986 0006 7047     		bx	lr
 987              	.LVL71:
 988              	.L92:
 989              		.cfi_def_cfa_offset 16
 990              		.cfi_offset 4, -16
 991              		.cfi_offset 5, -12
 992              		.cfi_offset 6, -8
 993              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 994              		.loc 1 1201 0
 995 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 996 000a FFF7FEFF 		bl	UART_PutChar
 997              	.LVL72:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 998              		.loc 1 1202 0
 999 000e 0134     		adds	r4, r4, #1
 1000              	.LVL73:
 1001 0010 E4B2     		uxtb	r4, r4
 1002              	.LVL74:
 1003 0012 03E0     		b	.L90
 1004              	.LVL75:
 1005              	.L93:
 1006              		.cfi_def_cfa_offset 0
 1007              		.cfi_restore 4
 1008              		.cfi_restore 5
 1009              		.cfi_restore 6
 1010              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
 1011              		.loc 1 1193 0
 1012 0014 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 40


 1013              		.cfi_def_cfa_offset 16
 1014              		.cfi_offset 4, -16
 1015              		.cfi_offset 5, -12
 1016              		.cfi_offset 6, -8
 1017              		.cfi_offset 14, -4
 1018 0016 0D46     		mov	r5, r1
 1019 0018 0646     		mov	r6, r0
 1020 001a 0024     		movs	r4, #0
 1021              	.LVL76:
 1022              	.L90:
1199:Generated_Source\PSoC5/UART.c ****             {
 1023              		.loc 1 1199 0
 1024 001c AC42     		cmp	r4, r5
 1025 001e F3D3     		bcc	.L92
 1026 0020 70BD     		pop	{r4, r5, r6, pc}
 1027              	.LVL77:
 1028              	.L96:
 1029 0022 00BF     		.align	2
 1030              	.L95:
 1031 0024 00000000 		.word	.LANCHOR0
 1032              		.cfi_endproc
 1033              	.LFE21:
 1034              		.size	UART_PutArray, .-UART_PutArray
 1035              		.section	.text.UART_PutCRLF,"ax",%progbits
 1036              		.align	2
 1037              		.global	UART_PutCRLF
 1038              		.thumb
 1039              		.thumb_func
 1040              		.type	UART_PutCRLF, %function
 1041              	UART_PutCRLF:
 1042              	.LFB22:
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 41


1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 1043              		.loc 1 1231 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047              	.LVL78:
 1048 0000 08B5     		push	{r3, lr}
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 3, -8
 1051              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1052              		.loc 1 1233 0
 1053 0002 064B     		ldr	r3, .L100
 1054 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1055 0006 3BB1     		cbz	r3, .L97
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 1056              		.loc 1 1235 0
 1057 0008 FFF7FEFF 		bl	UART_PutChar
 1058              	.LVL79:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 1059              		.loc 1 1236 0
 1060 000c 0D20     		movs	r0, #13
 1061 000e FFF7FEFF 		bl	UART_PutChar
 1062              	.LVL80:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 1063              		.loc 1 1237 0
 1064 0012 0A20     		movs	r0, #10
 1065 0014 FFF7FEFF 		bl	UART_PutChar
 1066              	.LVL81:
 1067              	.L97:
 1068 0018 08BD     		pop	{r3, pc}
 1069              	.L101:
 1070 001a 00BF     		.align	2
 1071              	.L100:
 1072 001c 00000000 		.word	.LANCHOR0
 1073              		.cfi_endproc
 1074              	.LFE22:
 1075              		.size	UART_PutCRLF, .-UART_PutCRLF
 1076              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1077              		.align	2
 1078              		.global	UART_GetTxBufferSize
 1079              		.thumb
 1080              		.thumb_func
 1081              		.type	UART_GetTxBufferSize, %function
 1082              	UART_GetTxBufferSize:
 1083              	.LFB23:
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 42


1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 1084              		.loc 1 1275 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 43


1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 1089              		.loc 1 1301 0
 1090 0000 074B     		ldr	r3, .L106
 1091 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 0004 DBB2     		uxtb	r3, r3
 1093              	.LVL82:
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 1094              		.loc 1 1304 0
 1095 0006 13F0040F 		tst	r3, #4
 1096 000a 04D1     		bne	.L104
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 1097              		.loc 1 1308 0
 1098 000c 13F0020F 		tst	r3, #2
 1099 0010 03D0     		beq	.L105
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
 1100              		.loc 1 1310 0
 1101 0012 0020     		movs	r0, #0
 1102 0014 7047     		bx	lr
 1103              	.L104:
1306:Generated_Source\PSoC5/UART.c ****         }
 1104              		.loc 1 1306 0
 1105 0016 0420     		movs	r0, #4
 1106 0018 7047     		bx	lr
 1107              	.L105:
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
 1108              		.loc 1 1315 0
 1109 001a 0120     		movs	r0, #1
 1110              	.LVL83:
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 1111              		.loc 1 1321 0
 1112 001c 7047     		bx	lr
 1113              	.L107:
 1114 001e 00BF     		.align	2
 1115              	.L106:
 1116 0020 68650040 		.word	1073767784
 1117              		.cfi_endproc
 1118              	.LFE23:
 1119              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 44


 1120              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1121              		.align	2
 1122              		.global	UART_ClearTxBuffer
 1123              		.thumb
 1124              		.thumb_func
 1125              		.type	UART_ClearTxBuffer, %function
 1126              	UART_ClearTxBuffer:
 1127              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 1128              		.loc 1 1355 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132 0000 08B5     		push	{r3, lr}
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 3, -8
 1135              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1136              		.loc 1 1358 0
 1137 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1138              	.LVL84:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 45


1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1139              		.loc 1 1360 0
 1140 0006 064B     		ldr	r3, .L110
 1141 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1142 000a 42F00102 		orr	r2, r2, #1
 1143 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1144              		.loc 1 1361 0
 1145 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1146 0012 02F0FE02 		and	r2, r2, #254
 1147 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1148              		.loc 1 1362 0
 1149 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1150              	.LVL85:
 1151 001c 08BD     		pop	{r3, pc}
 1152              	.L111:
 1153 001e 00BF     		.align	2
 1154              	.L110:
 1155 0020 98650040 		.word	1073767832
 1156              		.cfi_endproc
 1157              	.LFE24:
 1158              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1159              		.section	.text.UART_SendBreak,"ax",%progbits
 1160              		.align	2
 1161              		.global	UART_SendBreak
 1162              		.thumb
 1163              		.thumb_func
 1164              		.type	UART_SendBreak, %function
 1165              	UART_SendBreak:
 1166              	.LFB25:
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 46


1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 1167              		.loc 1 1441 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 47


 1171              		@ link register save eliminated.
 1172              	.LVL86:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1173              		.loc 1 1444 0
 1174 0000 124B     		ldr	r3, .L119
 1175 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1176 0004 0BB3     		cbz	r3, .L112
 1177              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1178              		.loc 1 1490 0
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 48


 1179 0006 08B1     		cbz	r0, .L114
 1180              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1181 0008 0328     		cmp	r0, #3
 1182 000a 0DD1     		bne	.L115
 1183              	.L114:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1184              		.loc 1 1501 0 is_stmt 1
 1185 000c 104B     		ldr	r3, .L119+4
 1186 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1187 0010 0E4A     		ldr	r2, .L119
 1188 0012 9171     		strb	r1, [r2, #6]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1189              		.loc 1 1502 0
 1190 0014 6722     		movs	r2, #103
 1191 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 1192              		.loc 1 1509 0
 1193 0018 0022     		movs	r2, #0
 1194 001a 0D33     		adds	r3, r3, #13
 1195 001c 1A70     		strb	r2, [r3]
 1196              	.L116:
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1197              		.loc 1 1513 0 discriminator 1
 1198 001e 0D4B     		ldr	r3, .L119+8
 1199 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1200              	.LVL87:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1201              		.loc 1 1515 0 discriminator 1
 1202 0022 13F0020F 		tst	r3, #2
 1203 0026 FAD1     		bne	.L116
 1204              	.LVL88:
 1205              	.L115:
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1206              		.loc 1 1518 0
 1207 0028 0128     		cmp	r0, #1
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 49


 1208 002a 01D0     		beq	.L117
 1209              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1210 002c 0328     		cmp	r0, #3
 1211 002e 04D1     		bne	.L118
 1212              	.L117:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1213              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1214 0030 084B     		ldr	r3, .L119+8
 1215 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1216              	.LVL89:
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1217              		.loc 1 1525 0 discriminator 1
 1218 0034 13F0010F 		tst	r3, #1
 1219 0038 FAD0     		beq	.L117
 1220              	.LVL90:
 1221              	.L118:
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1222              		.loc 1 1529 0
 1223 003a 0138     		subs	r0, r0, #1
 1224              	.LVL91:
 1225 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1226              		.loc 1 1528 0
 1227 003e 0228     		cmp	r0, #2
 1228 0040 03D8     		bhi	.L112
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1229              		.loc 1 1534 0
 1230 0042 024B     		ldr	r3, .L119
 1231 0044 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1232 0046 024B     		ldr	r3, .L119+4
 1233 0048 1A70     		strb	r2, [r3]
 1234              	.L112:
 1235 004a 7047     		bx	lr
 1236              	.L120:
 1237              		.align	2
 1238              	.L119:
 1239 004c 00000000 		.word	.LANCHOR0
 1240 0050 3B650040 		.word	1073767739
 1241 0054 68650040 		.word	1073767784
 1242              	.LBE2:
 1243              		.cfi_endproc
 1244              	.LFE25:
 1245              		.size	UART_SendBreak, .-UART_SendBreak
 1246              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1247              		.align	2
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 50


 1248              		.global	UART_SetTxAddressMode
 1249              		.thumb
 1250              		.thumb_func
 1251              		.type	UART_SetTxAddressMode, %function
 1252              	UART_SetTxAddressMode:
 1253              	.LFB26:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1254              		.loc 1 1573 0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 0
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258              		@ link register save eliminated.
 1259              	.LVL92:
 1260 0000 7047     		bx	lr
 1261              		.cfi_endproc
 1262              	.LFE26:
 1263              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1264              		.global	UART_rxBufferOverflow
 1265              		.global	UART_rxBufferLoopDetect
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 51


 1266              		.global	UART_rxBufferWrite
 1267              		.global	UART_rxBufferRead
 1268              		.comm	UART_rxBuffer,100,4
 1269              		.global	UART_errorStatus
 1270              		.global	UART_initVar
 1271 0002 00BF     		.bss
 1272              		.set	.LANCHOR0,. + 0
 1273              		.type	UART_errorStatus, %object
 1274              		.size	UART_errorStatus, 1
 1275              	UART_errorStatus:
 1276 0000 00       		.space	1
 1277              		.type	UART_initVar, %object
 1278              		.size	UART_initVar, 1
 1279              	UART_initVar:
 1280 0001 00       		.space	1
 1281              		.type	UART_rxBufferRead, %object
 1282              		.size	UART_rxBufferRead, 1
 1283              	UART_rxBufferRead:
 1284 0002 00       		.space	1
 1285              		.type	UART_rxBufferWrite, %object
 1286              		.size	UART_rxBufferWrite, 1
 1287              	UART_rxBufferWrite:
 1288 0003 00       		.space	1
 1289              		.type	UART_rxBufferLoopDetect, %object
 1290              		.size	UART_rxBufferLoopDetect, 1
 1291              	UART_rxBufferLoopDetect:
 1292 0004 00       		.space	1
 1293              		.type	UART_rxBufferOverflow, %object
 1294              		.size	UART_rxBufferOverflow, 1
 1295              	UART_rxBufferOverflow:
 1296 0005 00       		.space	1
 1297              		.type	txPeriod.5141, %object
 1298              		.size	txPeriod.5141, 1
 1299              	txPeriod.5141:
 1300 0006 00       		.space	1
 1301              		.text
 1302              	.Letext0:
 1303              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1304              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1305              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1306              		.section	.debug_info,"",%progbits
 1307              	.Ldebug_info0:
 1308 0000 29070000 		.4byte	0x729
 1309 0004 0400     		.2byte	0x4
 1310 0006 00000000 		.4byte	.Ldebug_abbrev0
 1311 000a 04       		.byte	0x4
 1312 000b 01       		.uleb128 0x1
 1313 000c D3030000 		.4byte	.LASF79
 1314 0010 0C       		.byte	0xc
 1315 0011 4D030000 		.4byte	.LASF80
 1316 0015 69000000 		.4byte	.LASF81
 1317 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1318 001d 00000000 		.4byte	0
 1319 0021 00000000 		.4byte	.Ldebug_line0
 1320 0025 02       		.uleb128 0x2
 1321 0026 01       		.byte	0x1
 1322 0027 06       		.byte	0x6
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 52


 1323 0028 EF000000 		.4byte	.LASF0
 1324 002c 02       		.uleb128 0x2
 1325 002d 01       		.byte	0x1
 1326 002e 08       		.byte	0x8
 1327 002f 9B030000 		.4byte	.LASF1
 1328 0033 02       		.uleb128 0x2
 1329 0034 02       		.byte	0x2
 1330 0035 05       		.byte	0x5
 1331 0036 BA030000 		.4byte	.LASF2
 1332 003a 02       		.uleb128 0x2
 1333 003b 02       		.byte	0x2
 1334 003c 07       		.byte	0x7
 1335 003d 3C020000 		.4byte	.LASF3
 1336 0041 02       		.uleb128 0x2
 1337 0042 04       		.byte	0x4
 1338 0043 05       		.byte	0x5
 1339 0044 04010000 		.4byte	.LASF4
 1340 0048 02       		.uleb128 0x2
 1341 0049 04       		.byte	0x4
 1342 004a 07       		.byte	0x7
 1343 004b E8010000 		.4byte	.LASF5
 1344 004f 02       		.uleb128 0x2
 1345 0050 08       		.byte	0x8
 1346 0051 05       		.byte	0x5
 1347 0052 E1000000 		.4byte	.LASF6
 1348 0056 02       		.uleb128 0x2
 1349 0057 08       		.byte	0x8
 1350 0058 07       		.byte	0x7
 1351 0059 2F000000 		.4byte	.LASF7
 1352 005d 03       		.uleb128 0x3
 1353 005e 04       		.byte	0x4
 1354 005f 05       		.byte	0x5
 1355 0060 696E7400 		.ascii	"int\000"
 1356 0064 02       		.uleb128 0x2
 1357 0065 04       		.byte	0x4
 1358 0066 07       		.byte	0x7
 1359 0067 AC010000 		.4byte	.LASF8
 1360 006b 04       		.uleb128 0x4
 1361 006c 2A010000 		.4byte	.LASF9
 1362 0070 02       		.byte	0x2
 1363 0071 E401     		.2byte	0x1e4
 1364 0073 2C000000 		.4byte	0x2c
 1365 0077 04       		.uleb128 0x4
 1366 0078 00000000 		.4byte	.LASF10
 1367 007c 02       		.byte	0x2
 1368 007d E501     		.2byte	0x1e5
 1369 007f 3A000000 		.4byte	0x3a
 1370 0083 04       		.uleb128 0x4
 1371 0084 6F010000 		.4byte	.LASF11
 1372 0088 02       		.byte	0x2
 1373 0089 E601     		.2byte	0x1e6
 1374 008b 48000000 		.4byte	0x48
 1375 008f 02       		.uleb128 0x2
 1376 0090 04       		.byte	0x4
 1377 0091 04       		.byte	0x4
 1378 0092 22050000 		.4byte	.LASF12
 1379 0096 02       		.uleb128 0x2
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 53


 1380 0097 08       		.byte	0x8
 1381 0098 04       		.byte	0x4
 1382 0099 49010000 		.4byte	.LASF13
 1383 009d 04       		.uleb128 0x4
 1384 009e 95040000 		.4byte	.LASF14
 1385 00a2 02       		.byte	0x2
 1386 00a3 F501     		.2byte	0x1f5
 1387 00a5 A9000000 		.4byte	0xa9
 1388 00a9 02       		.uleb128 0x2
 1389 00aa 01       		.byte	0x1
 1390 00ab 08       		.byte	0x8
 1391 00ac 90040000 		.4byte	.LASF15
 1392 00b0 04       		.uleb128 0x4
 1393 00b1 80030000 		.4byte	.LASF16
 1394 00b5 02       		.byte	0x2
 1395 00b6 8E02     		.2byte	0x28e
 1396 00b8 BC000000 		.4byte	0xbc
 1397 00bc 05       		.uleb128 0x5
 1398 00bd 6B000000 		.4byte	0x6b
 1399 00c1 04       		.uleb128 0x4
 1400 00c2 AD020000 		.4byte	.LASF17
 1401 00c6 02       		.byte	0x2
 1402 00c7 9002     		.2byte	0x290
 1403 00c9 CD000000 		.4byte	0xcd
 1404 00cd 05       		.uleb128 0x5
 1405 00ce 83000000 		.4byte	0x83
 1406 00d2 02       		.uleb128 0x2
 1407 00d3 08       		.byte	0x8
 1408 00d4 04       		.byte	0x4
 1409 00d5 C4020000 		.4byte	.LASF18
 1410 00d9 02       		.uleb128 0x2
 1411 00da 04       		.byte	0x4
 1412 00db 07       		.byte	0x7
 1413 00dc BB020000 		.4byte	.LASF19
 1414 00e0 06       		.uleb128 0x6
 1415 00e1 8D010000 		.4byte	.LASF20
 1416 00e5 01       		.byte	0x1
 1417 00e6 6A       		.byte	0x6a
 1418 00e7 00000000 		.4byte	.LFB1
 1419 00eb 44000000 		.4byte	.LFE1-.LFB1
 1420 00ef 01       		.uleb128 0x1
 1421 00f0 9C       		.byte	0x9c
 1422 00f1 1D010000 		.4byte	0x11d
 1423 00f5 07       		.uleb128 0x7
 1424 00f6 0A000000 		.4byte	.LVL0
 1425 00fa EA060000 		.4byte	0x6ea
 1426 00fe 08010000 		.4byte	0x108
 1427 0102 08       		.uleb128 0x8
 1428 0103 01       		.uleb128 0x1
 1429 0104 50       		.byte	0x50
 1430 0105 01       		.uleb128 0x1
 1431 0106 30       		.byte	0x30
 1432 0107 00       		.byte	0
 1433 0108 09       		.uleb128 0x9
 1434 0109 12000000 		.4byte	.LVL1
 1435 010d F5060000 		.4byte	0x6f5
 1436 0111 08       		.uleb128 0x8
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 54


 1437 0112 01       		.uleb128 0x1
 1438 0113 50       		.byte	0x50
 1439 0114 01       		.uleb128 0x1
 1440 0115 30       		.byte	0x30
 1441 0116 08       		.uleb128 0x8
 1442 0117 01       		.uleb128 0x1
 1443 0118 51       		.byte	0x51
 1444 0119 01       		.uleb128 0x1
 1445 011a 37       		.byte	0x37
 1446 011b 00       		.byte	0
 1447 011c 00       		.byte	0
 1448 011d 06       		.uleb128 0x6
 1449 011e 72040000 		.4byte	.LASF21
 1450 0122 01       		.byte	0x1
 1451 0123 B7       		.byte	0xb7
 1452 0124 00000000 		.4byte	.LFB2
 1453 0128 44000000 		.4byte	.LFE2-.LFB2
 1454 012c 01       		.uleb128 0x1
 1455 012d 9C       		.byte	0x9c
 1456 012e 64010000 		.4byte	0x164
 1457 0132 0A       		.uleb128 0xa
 1458 0133 D0040000 		.4byte	.LASF24
 1459 0137 01       		.byte	0x1
 1460 0138 B9       		.byte	0xb9
 1461 0139 6B000000 		.4byte	0x6b
 1462 013d 00000000 		.4byte	.LLST0
 1463 0141 0B       		.uleb128 0xb
 1464 0142 06000000 		.4byte	.LVL2
 1465 0146 00070000 		.4byte	0x700
 1466 014a 0B       		.uleb128 0xb
 1467 014b 30000000 		.4byte	.LVL4
 1468 014f 0B070000 		.4byte	0x70b
 1469 0153 09       		.uleb128 0x9
 1470 0154 36000000 		.4byte	.LVL5
 1471 0158 16070000 		.4byte	0x716
 1472 015c 08       		.uleb128 0x8
 1473 015d 01       		.uleb128 0x1
 1474 015e 50       		.byte	0x50
 1475 015f 02       		.uleb128 0x2
 1476 0160 74       		.byte	0x74
 1477 0161 00       		.sleb128 0
 1478 0162 00       		.byte	0
 1479 0163 00       		.byte	0
 1480 0164 06       		.uleb128 0x6
 1481 0165 46000000 		.4byte	.LASF22
 1482 0169 01       		.byte	0x1
 1483 016a 4C       		.byte	0x4c
 1484 016b 00000000 		.4byte	.LFB0
 1485 016f 1C000000 		.4byte	.LFE0-.LFB0
 1486 0173 01       		.uleb128 0x1
 1487 0174 9C       		.byte	0x9c
 1488 0175 8C010000 		.4byte	0x18c
 1489 0179 0B       		.uleb128 0xb
 1490 017a 0C000000 		.4byte	.LVL7
 1491 017e E0000000 		.4byte	0xe0
 1492 0182 0B       		.uleb128 0xb
 1493 0183 16000000 		.4byte	.LVL8
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 55


 1494 0187 1D010000 		.4byte	0x11d
 1495 018b 00       		.byte	0
 1496 018c 06       		.uleb128 0x6
 1497 018d 0A050000 		.4byte	.LASF23
 1498 0191 01       		.byte	0x1
 1499 0192 F0       		.byte	0xf0
 1500 0193 00000000 		.4byte	.LFB3
 1501 0197 48000000 		.4byte	.LFE3-.LFB3
 1502 019b 01       		.uleb128 0x1
 1503 019c 9C       		.byte	0x9c
 1504 019d D3010000 		.4byte	0x1d3
 1505 01a1 0A       		.uleb128 0xa
 1506 01a2 D0040000 		.4byte	.LASF24
 1507 01a6 01       		.byte	0x1
 1508 01a7 F2       		.byte	0xf2
 1509 01a8 6B000000 		.4byte	0x6b
 1510 01ac 13000000 		.4byte	.LLST1
 1511 01b0 0B       		.uleb128 0xb
 1512 01b1 06000000 		.4byte	.LVL9
 1513 01b5 00070000 		.4byte	0x700
 1514 01b9 0B       		.uleb128 0xb
 1515 01ba 16000000 		.4byte	.LVL11
 1516 01be 21070000 		.4byte	0x721
 1517 01c2 09       		.uleb128 0x9
 1518 01c3 36000000 		.4byte	.LVL12
 1519 01c7 16070000 		.4byte	0x716
 1520 01cb 08       		.uleb128 0x8
 1521 01cc 01       		.uleb128 0x1
 1522 01cd 50       		.byte	0x50
 1523 01ce 02       		.uleb128 0x2
 1524 01cf 74       		.byte	0x74
 1525 01d0 00       		.sleb128 0
 1526 01d1 00       		.byte	0
 1527 01d2 00       		.byte	0
 1528 01d3 0C       		.uleb128 0xc
 1529 01d4 30010000 		.4byte	.LASF50
 1530 01d8 01       		.byte	0x1
 1531 01d9 2701     		.2byte	0x127
 1532 01db 6B000000 		.4byte	0x6b
 1533 01df 00000000 		.4byte	.LFB4
 1534 01e3 04000000 		.4byte	.LFE4-.LFB4
 1535 01e7 01       		.uleb128 0x1
 1536 01e8 9C       		.byte	0x9c
 1537 01e9 0D       		.uleb128 0xd
 1538 01ea 37050000 		.4byte	.LASF25
 1539 01ee 01       		.byte	0x1
 1540 01ef 3F01     		.2byte	0x13f
 1541 01f1 00000000 		.4byte	.LFB5
 1542 01f5 02000000 		.4byte	.LFE5-.LFB5
 1543 01f9 01       		.uleb128 0x1
 1544 01fa 9C       		.byte	0x9c
 1545 01fb 0E020000 		.4byte	0x20e
 1546 01ff 0E       		.uleb128 0xe
 1547 0200 85010000 		.4byte	.LASF27
 1548 0204 01       		.byte	0x1
 1549 0205 3F01     		.2byte	0x13f
 1550 0207 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 56


 1551 020b 01       		.uleb128 0x1
 1552 020c 50       		.byte	0x50
 1553 020d 00       		.byte	0
 1554 020e 0D       		.uleb128 0xd
 1555 020f 9B040000 		.4byte	.LASF26
 1556 0213 01       		.byte	0x1
 1557 0214 6701     		.2byte	0x167
 1558 0216 00000000 		.4byte	.LFB6
 1559 021a 0C000000 		.4byte	.LFE6-.LFB6
 1560 021e 01       		.uleb128 0x1
 1561 021f 9C       		.byte	0x9c
 1562 0220 33020000 		.4byte	0x233
 1563 0224 0E       		.uleb128 0xe
 1564 0225 6A020000 		.4byte	.LASF28
 1565 0229 01       		.byte	0x1
 1566 022a 6701     		.2byte	0x167
 1567 022c 6B000000 		.4byte	0x6b
 1568 0230 01       		.uleb128 0x1
 1569 0231 50       		.byte	0x50
 1570 0232 00       		.byte	0
 1571 0233 0F       		.uleb128 0xf
 1572 0234 1A010000 		.4byte	.LASF32
 1573 0238 01       		.byte	0x1
 1574 0239 8801     		.2byte	0x188
 1575 023b 6B000000 		.4byte	0x6b
 1576 023f 00000000 		.4byte	.LFB7
 1577 0243 64000000 		.4byte	.LFE7-.LFB7
 1578 0247 01       		.uleb128 0x1
 1579 0248 9C       		.byte	0x9c
 1580 0249 7C020000 		.4byte	0x27c
 1581 024d 10       		.uleb128 0x10
 1582 024e 6B040000 		.4byte	.LASF29
 1583 0252 01       		.byte	0x1
 1584 0253 8A01     		.2byte	0x18a
 1585 0255 6B000000 		.4byte	0x6b
 1586 0259 26000000 		.4byte	.LLST2
 1587 025d 10       		.uleb128 0x10
 1588 025e C0040000 		.4byte	.LASF30
 1589 0262 01       		.byte	0x1
 1590 0263 8E01     		.2byte	0x18e
 1591 0265 6B000000 		.4byte	0x6b
 1592 0269 44000000 		.4byte	.LLST3
 1593 026d 11       		.uleb128 0x11
 1594 026e FE020000 		.4byte	.LASF31
 1595 0272 01       		.byte	0x1
 1596 0273 8F01     		.2byte	0x18f
 1597 0275 6B000000 		.4byte	0x6b
 1598 0279 01       		.uleb128 0x1
 1599 027a 51       		.byte	0x51
 1600 027b 00       		.byte	0
 1601 027c 0F       		.uleb128 0xf
 1602 027d 7E040000 		.4byte	.LASF33
 1603 0281 01       		.byte	0x1
 1604 0282 E501     		.2byte	0x1e5
 1605 0284 6B000000 		.4byte	0x6b
 1606 0288 00000000 		.4byte	.LFB8
 1607 028c 28000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 57


 1608 0290 01       		.uleb128 0x1
 1609 0291 9C       		.byte	0x9c
 1610 0292 A5020000 		.4byte	0x2a5
 1611 0296 11       		.uleb128 0x11
 1612 0297 03050000 		.4byte	.LASF34
 1613 029b 01       		.byte	0x1
 1614 029c E701     		.2byte	0x1e7
 1615 029e 6B000000 		.4byte	0x6b
 1616 02a2 01       		.uleb128 0x1
 1617 02a3 50       		.byte	0x50
 1618 02a4 00       		.byte	0
 1619 02a5 0F       		.uleb128 0xf
 1620 02a6 B3040000 		.4byte	.LASF35
 1621 02aa 01       		.byte	0x1
 1622 02ab 1402     		.2byte	0x214
 1623 02ad 6B000000 		.4byte	0x6b
 1624 02b1 00000000 		.4byte	.LFB9
 1625 02b5 80000000 		.4byte	.LFE9-.LFB9
 1626 02b9 01       		.uleb128 0x1
 1627 02ba 9C       		.byte	0x9c
 1628 02bb FE020000 		.4byte	0x2fe
 1629 02bf 10       		.uleb128 0x10
 1630 02c0 6B040000 		.4byte	.LASF29
 1631 02c4 01       		.byte	0x1
 1632 02c5 1602     		.2byte	0x216
 1633 02c7 6B000000 		.4byte	0x6b
 1634 02cb 89000000 		.4byte	.LLST4
 1635 02cf 10       		.uleb128 0x10
 1636 02d0 0F030000 		.4byte	.LASF36
 1637 02d4 01       		.byte	0x1
 1638 02d5 1702     		.2byte	0x217
 1639 02d7 6B000000 		.4byte	0x6b
 1640 02db D6000000 		.4byte	.LLST5
 1641 02df 10       		.uleb128 0x10
 1642 02e0 C0040000 		.4byte	.LASF30
 1643 02e4 01       		.byte	0x1
 1644 02e5 1A02     		.2byte	0x21a
 1645 02e7 6B000000 		.4byte	0x6b
 1646 02eb E9000000 		.4byte	.LLST6
 1647 02ef 11       		.uleb128 0x11
 1648 02f0 FE020000 		.4byte	.LASF31
 1649 02f4 01       		.byte	0x1
 1650 02f5 1B02     		.2byte	0x21b
 1651 02f7 6B000000 		.4byte	0x6b
 1652 02fb 01       		.uleb128 0x1
 1653 02fc 51       		.byte	0x51
 1654 02fd 00       		.byte	0
 1655 02fe 0F       		.uleb128 0xf
 1656 02ff 9F010000 		.4byte	.LASF37
 1657 0303 01       		.byte	0x1
 1658 0304 7A02     		.2byte	0x27a
 1659 0306 77000000 		.4byte	0x77
 1660 030a 00000000 		.4byte	.LFB10
 1661 030e 2C000000 		.4byte	.LFE10-.LFB10
 1662 0312 01       		.uleb128 0x1
 1663 0313 9C       		.byte	0x9c
 1664 0314 32030000 		.4byte	0x332
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 58


 1665 0318 10       		.uleb128 0x10
 1666 0319 D9010000 		.4byte	.LASF38
 1667 031d 01       		.byte	0x1
 1668 031e 7E02     		.2byte	0x27e
 1669 0320 77000000 		.4byte	0x77
 1670 0324 2E010000 		.4byte	.LLST7
 1671 0328 0B       		.uleb128 0xb
 1672 0329 1A000000 		.4byte	.LVL47
 1673 032d 33020000 		.4byte	0x233
 1674 0331 00       		.byte	0
 1675 0332 0F       		.uleb128 0xf
 1676 0333 EE040000 		.4byte	.LASF39
 1677 0337 01       		.byte	0x1
 1678 0338 AB02     		.2byte	0x2ab
 1679 033a 6B000000 		.4byte	0x6b
 1680 033e 00000000 		.4byte	.LFB11
 1681 0342 60000000 		.4byte	.LFE11-.LFB11
 1682 0346 01       		.uleb128 0x1
 1683 0347 9C       		.byte	0x9c
 1684 0348 5D030000 		.4byte	0x35d
 1685 034c 10       		.uleb128 0x10
 1686 034d 37020000 		.4byte	.LASF40
 1687 0351 01       		.byte	0x1
 1688 0352 AE02     		.2byte	0x2ae
 1689 0354 6B000000 		.4byte	0x6b
 1690 0358 41010000 		.4byte	.LLST8
 1691 035c 00       		.byte	0
 1692 035d 0D       		.uleb128 0xd
 1693 035e 51050000 		.4byte	.LASF41
 1694 0362 01       		.byte	0x1
 1695 0363 F502     		.2byte	0x2f5
 1696 0365 00000000 		.4byte	.LFB12
 1697 0369 44000000 		.4byte	.LFE12-.LFB12
 1698 036d 01       		.uleb128 0x1
 1699 036e 9C       		.byte	0x9c
 1700 036f 96030000 		.4byte	0x396
 1701 0373 10       		.uleb128 0x10
 1702 0374 D0040000 		.4byte	.LASF24
 1703 0378 01       		.byte	0x1
 1704 0379 F702     		.2byte	0x2f7
 1705 037b 6B000000 		.4byte	0x6b
 1706 037f 6A010000 		.4byte	.LLST9
 1707 0383 0B       		.uleb128 0xb
 1708 0384 06000000 		.4byte	.LVL53
 1709 0388 00070000 		.4byte	0x700
 1710 038c 0B       		.uleb128 0xb
 1711 038d 1C000000 		.4byte	.LVL54
 1712 0391 16070000 		.4byte	0x716
 1713 0395 00       		.byte	0
 1714 0396 0D       		.uleb128 0xd
 1715 0397 85030000 		.4byte	.LASF42
 1716 039b 01       		.byte	0x1
 1717 039c 2D03     		.2byte	0x32d
 1718 039e 00000000 		.4byte	.LFB13
 1719 03a2 02000000 		.4byte	.LFE13-.LFB13
 1720 03a6 01       		.uleb128 0x1
 1721 03a7 9C       		.byte	0x9c
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 59


 1722 03a8 BB030000 		.4byte	0x3bb
 1723 03ac 0E       		.uleb128 0xe
 1724 03ad 50010000 		.4byte	.LASF43
 1725 03b1 01       		.byte	0x1
 1726 03b2 2D03     		.2byte	0x32d
 1727 03b4 6B000000 		.4byte	0x6b
 1728 03b8 01       		.uleb128 0x1
 1729 03b9 50       		.byte	0x50
 1730 03ba 00       		.byte	0
 1731 03bb 0D       		.uleb128 0xd
 1732 03bc D8020000 		.4byte	.LASF44
 1733 03c0 01       		.byte	0x1
 1734 03c1 5903     		.2byte	0x359
 1735 03c3 00000000 		.4byte	.LFB14
 1736 03c7 0C000000 		.4byte	.LFE14-.LFB14
 1737 03cb 01       		.uleb128 0x1
 1738 03cc 9C       		.byte	0x9c
 1739 03cd E0030000 		.4byte	0x3e0
 1740 03d1 0E       		.uleb128 0xe
 1741 03d2 D0020000 		.4byte	.LASF45
 1742 03d6 01       		.byte	0x1
 1743 03d7 5903     		.2byte	0x359
 1744 03d9 6B000000 		.4byte	0x6b
 1745 03dd 01       		.uleb128 0x1
 1746 03de 50       		.byte	0x50
 1747 03df 00       		.byte	0
 1748 03e0 0D       		.uleb128 0xd
 1749 03e1 EB020000 		.4byte	.LASF46
 1750 03e5 01       		.byte	0x1
 1751 03e6 6D03     		.2byte	0x36d
 1752 03e8 00000000 		.4byte	.LFB15
 1753 03ec 0C000000 		.4byte	.LFE15-.LFB15
 1754 03f0 01       		.uleb128 0x1
 1755 03f1 9C       		.byte	0x9c
 1756 03f2 05040000 		.4byte	0x405
 1757 03f6 0E       		.uleb128 0xe
 1758 03f7 D0020000 		.4byte	.LASF45
 1759 03fb 01       		.byte	0x1
 1760 03fc 6D03     		.2byte	0x36d
 1761 03fe 6B000000 		.4byte	0x6b
 1762 0402 01       		.uleb128 0x1
 1763 0403 50       		.byte	0x50
 1764 0404 00       		.byte	0
 1765 0405 0D       		.uleb128 0xd
 1766 0406 51000000 		.4byte	.LASF47
 1767 040a 01       		.byte	0x1
 1768 040b 8C03     		.2byte	0x38c
 1769 040d 00000000 		.4byte	.LFB16
 1770 0411 0C000000 		.4byte	.LFE16-.LFB16
 1771 0415 01       		.uleb128 0x1
 1772 0416 9C       		.byte	0x9c
 1773 0417 2A040000 		.4byte	0x42a
 1774 041b 0E       		.uleb128 0xe
 1775 041c 6A020000 		.4byte	.LASF28
 1776 0420 01       		.byte	0x1
 1777 0421 8C03     		.2byte	0x38c
 1778 0423 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 60


 1779 0427 01       		.uleb128 0x1
 1780 0428 50       		.byte	0x50
 1781 0429 00       		.byte	0
 1782 042a 0D       		.uleb128 0xd
 1783 042b A9030000 		.4byte	.LASF48
 1784 042f 01       		.byte	0x1
 1785 0430 AE03     		.2byte	0x3ae
 1786 0432 00000000 		.4byte	.LFB17
 1787 0436 14000000 		.4byte	.LFE17-.LFB17
 1788 043a 01       		.uleb128 0x1
 1789 043b 9C       		.byte	0x9c
 1790 043c 4F040000 		.4byte	0x44f
 1791 0440 0E       		.uleb128 0xe
 1792 0441 1D000000 		.4byte	.LASF49
 1793 0445 01       		.byte	0x1
 1794 0446 AE03     		.2byte	0x3ae
 1795 0448 6B000000 		.4byte	0x6b
 1796 044c 01       		.uleb128 0x1
 1797 044d 50       		.byte	0x50
 1798 044e 00       		.byte	0
 1799 044f 0C       		.uleb128 0xc
 1800 0450 87020000 		.4byte	.LASF51
 1801 0454 01       		.byte	0x1
 1802 0455 EB03     		.2byte	0x3eb
 1803 0457 6B000000 		.4byte	0x6b
 1804 045b 00000000 		.4byte	.LFB18
 1805 045f 0C000000 		.4byte	.LFE18-.LFB18
 1806 0463 01       		.uleb128 0x1
 1807 0464 9C       		.byte	0x9c
 1808 0465 0D       		.uleb128 0xd
 1809 0466 0D010000 		.4byte	.LASF52
 1810 046a 01       		.byte	0x1
 1811 046b 1104     		.2byte	0x411
 1812 046d 00000000 		.4byte	.LFB19
 1813 0471 18000000 		.4byte	.LFE19-.LFB19
 1814 0475 01       		.uleb128 0x1
 1815 0476 9C       		.byte	0x9c
 1816 0477 8A040000 		.4byte	0x48a
 1817 047b 0E       		.uleb128 0xe
 1818 047c 1D000000 		.4byte	.LASF49
 1819 0480 01       		.byte	0x1
 1820 0481 1104     		.2byte	0x411
 1821 0483 6B000000 		.4byte	0x6b
 1822 0487 01       		.uleb128 0x1
 1823 0488 50       		.byte	0x50
 1824 0489 00       		.byte	0
 1825 048a 0D       		.uleb128 0xd
 1826 048b 28050000 		.4byte	.LASF53
 1827 048f 01       		.byte	0x1
 1828 0490 7904     		.2byte	0x479
 1829 0492 00000000 		.4byte	.LFB20
 1830 0496 24000000 		.4byte	.LFE20-.LFB20
 1831 049a 01       		.uleb128 0x1
 1832 049b 9C       		.byte	0x9c
 1833 049c CA040000 		.4byte	0x4ca
 1834 04a0 12       		.uleb128 0x12
 1835 04a1 28000000 		.4byte	.LASF54
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 61


 1836 04a5 01       		.byte	0x1
 1837 04a6 7904     		.2byte	0x479
 1838 04a8 CA040000 		.4byte	0x4ca
 1839 04ac 7D010000 		.4byte	.LLST10
 1840 04b0 10       		.uleb128 0x10
 1841 04b1 61020000 		.4byte	.LASF55
 1842 04b5 01       		.byte	0x1
 1843 04b6 7B04     		.2byte	0x47b
 1844 04b8 77000000 		.4byte	0x77
 1845 04bc BF010000 		.4byte	.LLST11
 1846 04c0 0B       		.uleb128 0xb
 1847 04c1 0E000000 		.4byte	.LVL64
 1848 04c5 65040000 		.4byte	0x465
 1849 04c9 00       		.byte	0
 1850 04ca 13       		.uleb128 0x13
 1851 04cb 04       		.byte	0x4
 1852 04cc D0040000 		.4byte	0x4d0
 1853 04d0 14       		.uleb128 0x14
 1854 04d1 9D000000 		.4byte	0x9d
 1855 04d5 0D       		.uleb128 0xd
 1856 04d6 FA010000 		.4byte	.LASF56
 1857 04da 01       		.byte	0x1
 1858 04db A704     		.2byte	0x4a7
 1859 04dd 00000000 		.4byte	.LFB21
 1860 04e1 28000000 		.4byte	.LFE21-.LFB21
 1861 04e5 01       		.uleb128 0x1
 1862 04e6 9C       		.byte	0x9c
 1863 04e7 25050000 		.4byte	0x525
 1864 04eb 12       		.uleb128 0x12
 1865 04ec 28000000 		.4byte	.LASF54
 1866 04f0 01       		.byte	0x1
 1867 04f1 A704     		.2byte	0x4a7
 1868 04f3 25050000 		.4byte	0x525
 1869 04f7 00020000 		.4byte	.LLST12
 1870 04fb 12       		.uleb128 0x12
 1871 04fc 61040000 		.4byte	.LASF57
 1872 0500 01       		.byte	0x1
 1873 0501 A704     		.2byte	0x4a7
 1874 0503 6B000000 		.4byte	0x6b
 1875 0507 42020000 		.4byte	.LLST13
 1876 050b 10       		.uleb128 0x10
 1877 050c 61020000 		.4byte	.LASF55
 1878 0510 01       		.byte	0x1
 1879 0511 AA04     		.2byte	0x4aa
 1880 0513 6B000000 		.4byte	0x6b
 1881 0517 7C020000 		.4byte	.LLST14
 1882 051b 0B       		.uleb128 0xb
 1883 051c 0E000000 		.4byte	.LVL72
 1884 0520 65040000 		.4byte	0x465
 1885 0524 00       		.byte	0
 1886 0525 13       		.uleb128 0x13
 1887 0526 04       		.byte	0x4
 1888 0527 2B050000 		.4byte	0x52b
 1889 052b 14       		.uleb128 0x14
 1890 052c 6B000000 		.4byte	0x6b
 1891 0530 0D       		.uleb128 0xd
 1892 0531 CC010000 		.4byte	.LASF58
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 62


 1893 0535 01       		.byte	0x1
 1894 0536 CE04     		.2byte	0x4ce
 1895 0538 00000000 		.4byte	.LFB22
 1896 053c 20000000 		.4byte	.LFE22-.LFB22
 1897 0540 01       		.uleb128 0x1
 1898 0541 9C       		.byte	0x9c
 1899 0542 82050000 		.4byte	0x582
 1900 0546 12       		.uleb128 0x12
 1901 0547 1D000000 		.4byte	.LASF49
 1902 054b 01       		.byte	0x1
 1903 054c CE04     		.2byte	0x4ce
 1904 054e 6B000000 		.4byte	0x6b
 1905 0552 BD020000 		.4byte	.LLST15
 1906 0556 0B       		.uleb128 0xb
 1907 0557 0C000000 		.4byte	.LVL79
 1908 055b 65040000 		.4byte	0x465
 1909 055f 07       		.uleb128 0x7
 1910 0560 12000000 		.4byte	.LVL80
 1911 0564 65040000 		.4byte	0x465
 1912 0568 72050000 		.4byte	0x572
 1913 056c 08       		.uleb128 0x8
 1914 056d 01       		.uleb128 0x1
 1915 056e 50       		.byte	0x50
 1916 056f 01       		.uleb128 0x1
 1917 0570 3D       		.byte	0x3d
 1918 0571 00       		.byte	0
 1919 0572 09       		.uleb128 0x9
 1920 0573 18000000 		.4byte	.LVL81
 1921 0577 65040000 		.4byte	0x465
 1922 057b 08       		.uleb128 0x8
 1923 057c 01       		.uleb128 0x1
 1924 057d 50       		.byte	0x50
 1925 057e 01       		.uleb128 0x1
 1926 057f 3A       		.byte	0x3a
 1927 0580 00       		.byte	0
 1928 0581 00       		.byte	0
 1929 0582 0F       		.uleb128 0xf
 1930 0583 6B030000 		.4byte	.LASF59
 1931 0587 01       		.byte	0x1
 1932 0588 F904     		.2byte	0x4f9
 1933 058a 6B000000 		.4byte	0x6b
 1934 058e 00000000 		.4byte	.LFB23
 1935 0592 24000000 		.4byte	.LFE23-.LFB23
 1936 0596 01       		.uleb128 0x1
 1937 0597 9C       		.byte	0x9c
 1938 0598 AD050000 		.4byte	0x5ad
 1939 059c 10       		.uleb128 0x10
 1940 059d 37020000 		.4byte	.LASF40
 1941 05a1 01       		.byte	0x1
 1942 05a2 FC04     		.2byte	0x4fc
 1943 05a4 6B000000 		.4byte	0x6b
 1944 05a8 DE020000 		.4byte	.LLST16
 1945 05ac 00       		.byte	0
 1946 05ad 0D       		.uleb128 0xd
 1947 05ae B9010000 		.4byte	.LASF60
 1948 05b2 01       		.byte	0x1
 1949 05b3 4A05     		.2byte	0x54a
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 63


 1950 05b5 00000000 		.4byte	.LFB24
 1951 05b9 24000000 		.4byte	.LFE24-.LFB24
 1952 05bd 01       		.uleb128 0x1
 1953 05be 9C       		.byte	0x9c
 1954 05bf E6050000 		.4byte	0x5e6
 1955 05c3 10       		.uleb128 0x10
 1956 05c4 D0040000 		.4byte	.LASF24
 1957 05c8 01       		.byte	0x1
 1958 05c9 4C05     		.2byte	0x54c
 1959 05cb 6B000000 		.4byte	0x6b
 1960 05cf FC020000 		.4byte	.LLST17
 1961 05d3 0B       		.uleb128 0xb
 1962 05d4 06000000 		.4byte	.LVL84
 1963 05d8 00070000 		.4byte	0x700
 1964 05dc 0B       		.uleb128 0xb
 1965 05dd 1C000000 		.4byte	.LVL85
 1966 05e1 16070000 		.4byte	0x716
 1967 05e5 00       		.byte	0
 1968 05e6 0D       		.uleb128 0xd
 1969 05e7 C4030000 		.4byte	.LASF61
 1970 05eb 01       		.byte	0x1
 1971 05ec A005     		.2byte	0x5a0
 1972 05ee 00000000 		.4byte	.LFB25
 1973 05f2 58000000 		.4byte	.LFE25-.LFB25
 1974 05f6 01       		.uleb128 0x1
 1975 05f7 9C       		.byte	0x9c
 1976 05f8 39060000 		.4byte	0x639
 1977 05fc 12       		.uleb128 0x12
 1978 05fd 97010000 		.4byte	.LASF62
 1979 0601 01       		.byte	0x1
 1980 0602 A005     		.2byte	0x5a0
 1981 0604 6B000000 		.4byte	0x6b
 1982 0608 0F030000 		.4byte	.LLST18
 1983 060c 15       		.uleb128 0x15
 1984 060d 06000000 		.4byte	.LBB2
 1985 0611 52000000 		.4byte	.LBE2-.LBB2
 1986 0615 10       		.uleb128 0x10
 1987 0616 B3020000 		.4byte	.LASF63
 1988 061a 01       		.byte	0x1
 1989 061b A805     		.2byte	0x5a8
 1990 061d 6B000000 		.4byte	0x6b
 1991 0621 30030000 		.4byte	.LLST19
 1992 0625 11       		.uleb128 0x11
 1993 0626 FB000000 		.4byte	.LASF64
 1994 062a 01       		.byte	0x1
 1995 062b D005     		.2byte	0x5d0
 1996 062d 6B000000 		.4byte	0x6b
 1997 0631 05       		.uleb128 0x5
 1998 0632 03       		.byte	0x3
 1999 0633 06000000 		.4byte	txPeriod.5141
 2000 0637 00       		.byte	0
 2001 0638 00       		.byte	0
 2002 0639 0D       		.uleb128 0xd
 2003 063a 71020000 		.4byte	.LASF65
 2004 063e 01       		.byte	0x1
 2005 063f 2406     		.2byte	0x624
 2006 0641 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 64


 2007 0645 02000000 		.4byte	.LFE26-.LFB26
 2008 0649 01       		.uleb128 0x1
 2009 064a 9C       		.byte	0x9c
 2010 064b 5E060000 		.4byte	0x65e
 2011 064f 0E       		.uleb128 0xe
 2012 0650 50010000 		.4byte	.LASF43
 2013 0654 01       		.byte	0x1
 2014 0655 2406     		.2byte	0x624
 2015 0657 6B000000 		.4byte	0x6b
 2016 065b 01       		.uleb128 0x1
 2017 065c 50       		.byte	0x50
 2018 065d 00       		.byte	0
 2019 065e 16       		.uleb128 0x16
 2020 065f E1040000 		.4byte	.LASF66
 2021 0663 01       		.byte	0x1
 2022 0664 1B       		.byte	0x1b
 2023 0665 6B000000 		.4byte	0x6b
 2024 0669 05       		.uleb128 0x5
 2025 066a 03       		.byte	0x3
 2026 066b 00000000 		.4byte	UART_initVar
 2027 066f 16       		.uleb128 0x16
 2028 0670 3C030000 		.4byte	.LASF67
 2029 0674 01       		.byte	0x1
 2030 0675 24       		.byte	0x24
 2031 0676 6B000000 		.4byte	0x6b
 2032 067a 05       		.uleb128 0x5
 2033 067b 03       		.byte	0x3
 2034 067c 00000000 		.4byte	UART_errorStatus
 2035 0680 17       		.uleb128 0x17
 2036 0681 BC000000 		.4byte	0xbc
 2037 0685 90060000 		.4byte	0x690
 2038 0689 18       		.uleb128 0x18
 2039 068a D9000000 		.4byte	0xd9
 2040 068e 63       		.byte	0x63
 2041 068f 00       		.byte	0
 2042 0690 16       		.uleb128 0x16
 2043 0691 14050000 		.4byte	.LASF68
 2044 0695 01       		.byte	0x1
 2045 0696 25       		.byte	0x25
 2046 0697 A1060000 		.4byte	0x6a1
 2047 069b 05       		.uleb128 0x5
 2048 069c 03       		.byte	0x3
 2049 069d 00000000 		.4byte	UART_rxBuffer
 2050 06a1 05       		.uleb128 0x5
 2051 06a2 80060000 		.4byte	0x680
 2052 06a6 16       		.uleb128 0x16
 2053 06a7 4F020000 		.4byte	.LASF69
 2054 06ab 01       		.byte	0x1
 2055 06ac 26       		.byte	0x26
 2056 06ad BC000000 		.4byte	0xbc
 2057 06b1 05       		.uleb128 0x5
 2058 06b2 03       		.byte	0x3
 2059 06b3 00000000 		.4byte	UART_rxBufferRead
 2060 06b7 16       		.uleb128 0x16
 2061 06b8 5C010000 		.4byte	.LASF70
 2062 06bc 01       		.byte	0x1
 2063 06bd 27       		.byte	0x27
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 65


 2064 06be BC000000 		.4byte	0xbc
 2065 06c2 05       		.uleb128 0x5
 2066 06c3 03       		.byte	0x3
 2067 06c4 00000000 		.4byte	UART_rxBufferWrite
 2068 06c8 16       		.uleb128 0x16
 2069 06c9 1F020000 		.4byte	.LASF71
 2070 06cd 01       		.byte	0x1
 2071 06ce 28       		.byte	0x28
 2072 06cf BC000000 		.4byte	0xbc
 2073 06d3 05       		.uleb128 0x5
 2074 06d4 03       		.byte	0x3
 2075 06d5 00000000 		.4byte	UART_rxBufferLoopDetect
 2076 06d9 16       		.uleb128 0x16
 2077 06da CB000000 		.4byte	.LASF72
 2078 06de 01       		.byte	0x1
 2079 06df 29       		.byte	0x29
 2080 06e0 BC000000 		.4byte	0xbc
 2081 06e4 05       		.uleb128 0x5
 2082 06e5 03       		.byte	0x3
 2083 06e6 00000000 		.4byte	UART_rxBufferOverflow
 2084 06ea 19       		.uleb128 0x19
 2085 06eb 76010000 		.4byte	.LASF73
 2086 06ef 76010000 		.4byte	.LASF73
 2087 06f3 03       		.byte	0x3
 2088 06f4 88       		.byte	0x88
 2089 06f5 19       		.uleb128 0x19
 2090 06f6 2B030000 		.4byte	.LASF74
 2091 06fa 2B030000 		.4byte	.LASF74
 2092 06fe 03       		.byte	0x3
 2093 06ff 8B       		.byte	0x8b
 2094 0700 19       		.uleb128 0x19
 2095 0701 08020000 		.4byte	.LASF75
 2096 0705 08020000 		.4byte	.LASF75
 2097 0709 03       		.byte	0x3
 2098 070a 7D       		.byte	0x7d
 2099 070b 19       		.uleb128 0x19
 2100 070c 99020000 		.4byte	.LASF76
 2101 0710 99020000 		.4byte	.LASF76
 2102 0714 04       		.byte	0x4
 2103 0715 27       		.byte	0x27
 2104 0716 19       		.uleb128 0x19
 2105 0717 07000000 		.4byte	.LASF77
 2106 071b 07000000 		.4byte	.LASF77
 2107 071f 03       		.byte	0x3
 2108 0720 7E       		.byte	0x7e
 2109 0721 19       		.uleb128 0x19
 2110 0722 18030000 		.4byte	.LASF78
 2111 0726 18030000 		.4byte	.LASF78
 2112 072a 04       		.byte	0x4
 2113 072b 28       		.byte	0x28
 2114 072c 00       		.byte	0
 2115              		.section	.debug_abbrev,"",%progbits
 2116              	.Ldebug_abbrev0:
 2117 0000 01       		.uleb128 0x1
 2118 0001 11       		.uleb128 0x11
 2119 0002 01       		.byte	0x1
 2120 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 66


 2121 0004 0E       		.uleb128 0xe
 2122 0005 13       		.uleb128 0x13
 2123 0006 0B       		.uleb128 0xb
 2124 0007 03       		.uleb128 0x3
 2125 0008 0E       		.uleb128 0xe
 2126 0009 1B       		.uleb128 0x1b
 2127 000a 0E       		.uleb128 0xe
 2128 000b 55       		.uleb128 0x55
 2129 000c 17       		.uleb128 0x17
 2130 000d 11       		.uleb128 0x11
 2131 000e 01       		.uleb128 0x1
 2132 000f 10       		.uleb128 0x10
 2133 0010 17       		.uleb128 0x17
 2134 0011 00       		.byte	0
 2135 0012 00       		.byte	0
 2136 0013 02       		.uleb128 0x2
 2137 0014 24       		.uleb128 0x24
 2138 0015 00       		.byte	0
 2139 0016 0B       		.uleb128 0xb
 2140 0017 0B       		.uleb128 0xb
 2141 0018 3E       		.uleb128 0x3e
 2142 0019 0B       		.uleb128 0xb
 2143 001a 03       		.uleb128 0x3
 2144 001b 0E       		.uleb128 0xe
 2145 001c 00       		.byte	0
 2146 001d 00       		.byte	0
 2147 001e 03       		.uleb128 0x3
 2148 001f 24       		.uleb128 0x24
 2149 0020 00       		.byte	0
 2150 0021 0B       		.uleb128 0xb
 2151 0022 0B       		.uleb128 0xb
 2152 0023 3E       		.uleb128 0x3e
 2153 0024 0B       		.uleb128 0xb
 2154 0025 03       		.uleb128 0x3
 2155 0026 08       		.uleb128 0x8
 2156 0027 00       		.byte	0
 2157 0028 00       		.byte	0
 2158 0029 04       		.uleb128 0x4
 2159 002a 16       		.uleb128 0x16
 2160 002b 00       		.byte	0
 2161 002c 03       		.uleb128 0x3
 2162 002d 0E       		.uleb128 0xe
 2163 002e 3A       		.uleb128 0x3a
 2164 002f 0B       		.uleb128 0xb
 2165 0030 3B       		.uleb128 0x3b
 2166 0031 05       		.uleb128 0x5
 2167 0032 49       		.uleb128 0x49
 2168 0033 13       		.uleb128 0x13
 2169 0034 00       		.byte	0
 2170 0035 00       		.byte	0
 2171 0036 05       		.uleb128 0x5
 2172 0037 35       		.uleb128 0x35
 2173 0038 00       		.byte	0
 2174 0039 49       		.uleb128 0x49
 2175 003a 13       		.uleb128 0x13
 2176 003b 00       		.byte	0
 2177 003c 00       		.byte	0
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 67


 2178 003d 06       		.uleb128 0x6
 2179 003e 2E       		.uleb128 0x2e
 2180 003f 01       		.byte	0x1
 2181 0040 3F       		.uleb128 0x3f
 2182 0041 19       		.uleb128 0x19
 2183 0042 03       		.uleb128 0x3
 2184 0043 0E       		.uleb128 0xe
 2185 0044 3A       		.uleb128 0x3a
 2186 0045 0B       		.uleb128 0xb
 2187 0046 3B       		.uleb128 0x3b
 2188 0047 0B       		.uleb128 0xb
 2189 0048 27       		.uleb128 0x27
 2190 0049 19       		.uleb128 0x19
 2191 004a 11       		.uleb128 0x11
 2192 004b 01       		.uleb128 0x1
 2193 004c 12       		.uleb128 0x12
 2194 004d 06       		.uleb128 0x6
 2195 004e 40       		.uleb128 0x40
 2196 004f 18       		.uleb128 0x18
 2197 0050 9742     		.uleb128 0x2117
 2198 0052 19       		.uleb128 0x19
 2199 0053 01       		.uleb128 0x1
 2200 0054 13       		.uleb128 0x13
 2201 0055 00       		.byte	0
 2202 0056 00       		.byte	0
 2203 0057 07       		.uleb128 0x7
 2204 0058 898201   		.uleb128 0x4109
 2205 005b 01       		.byte	0x1
 2206 005c 11       		.uleb128 0x11
 2207 005d 01       		.uleb128 0x1
 2208 005e 31       		.uleb128 0x31
 2209 005f 13       		.uleb128 0x13
 2210 0060 01       		.uleb128 0x1
 2211 0061 13       		.uleb128 0x13
 2212 0062 00       		.byte	0
 2213 0063 00       		.byte	0
 2214 0064 08       		.uleb128 0x8
 2215 0065 8A8201   		.uleb128 0x410a
 2216 0068 00       		.byte	0
 2217 0069 02       		.uleb128 0x2
 2218 006a 18       		.uleb128 0x18
 2219 006b 9142     		.uleb128 0x2111
 2220 006d 18       		.uleb128 0x18
 2221 006e 00       		.byte	0
 2222 006f 00       		.byte	0
 2223 0070 09       		.uleb128 0x9
 2224 0071 898201   		.uleb128 0x4109
 2225 0074 01       		.byte	0x1
 2226 0075 11       		.uleb128 0x11
 2227 0076 01       		.uleb128 0x1
 2228 0077 31       		.uleb128 0x31
 2229 0078 13       		.uleb128 0x13
 2230 0079 00       		.byte	0
 2231 007a 00       		.byte	0
 2232 007b 0A       		.uleb128 0xa
 2233 007c 34       		.uleb128 0x34
 2234 007d 00       		.byte	0
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 68


 2235 007e 03       		.uleb128 0x3
 2236 007f 0E       		.uleb128 0xe
 2237 0080 3A       		.uleb128 0x3a
 2238 0081 0B       		.uleb128 0xb
 2239 0082 3B       		.uleb128 0x3b
 2240 0083 0B       		.uleb128 0xb
 2241 0084 49       		.uleb128 0x49
 2242 0085 13       		.uleb128 0x13
 2243 0086 02       		.uleb128 0x2
 2244 0087 17       		.uleb128 0x17
 2245 0088 00       		.byte	0
 2246 0089 00       		.byte	0
 2247 008a 0B       		.uleb128 0xb
 2248 008b 898201   		.uleb128 0x4109
 2249 008e 00       		.byte	0
 2250 008f 11       		.uleb128 0x11
 2251 0090 01       		.uleb128 0x1
 2252 0091 31       		.uleb128 0x31
 2253 0092 13       		.uleb128 0x13
 2254 0093 00       		.byte	0
 2255 0094 00       		.byte	0
 2256 0095 0C       		.uleb128 0xc
 2257 0096 2E       		.uleb128 0x2e
 2258 0097 00       		.byte	0
 2259 0098 3F       		.uleb128 0x3f
 2260 0099 19       		.uleb128 0x19
 2261 009a 03       		.uleb128 0x3
 2262 009b 0E       		.uleb128 0xe
 2263 009c 3A       		.uleb128 0x3a
 2264 009d 0B       		.uleb128 0xb
 2265 009e 3B       		.uleb128 0x3b
 2266 009f 05       		.uleb128 0x5
 2267 00a0 27       		.uleb128 0x27
 2268 00a1 19       		.uleb128 0x19
 2269 00a2 49       		.uleb128 0x49
 2270 00a3 13       		.uleb128 0x13
 2271 00a4 11       		.uleb128 0x11
 2272 00a5 01       		.uleb128 0x1
 2273 00a6 12       		.uleb128 0x12
 2274 00a7 06       		.uleb128 0x6
 2275 00a8 40       		.uleb128 0x40
 2276 00a9 18       		.uleb128 0x18
 2277 00aa 9742     		.uleb128 0x2117
 2278 00ac 19       		.uleb128 0x19
 2279 00ad 00       		.byte	0
 2280 00ae 00       		.byte	0
 2281 00af 0D       		.uleb128 0xd
 2282 00b0 2E       		.uleb128 0x2e
 2283 00b1 01       		.byte	0x1
 2284 00b2 3F       		.uleb128 0x3f
 2285 00b3 19       		.uleb128 0x19
 2286 00b4 03       		.uleb128 0x3
 2287 00b5 0E       		.uleb128 0xe
 2288 00b6 3A       		.uleb128 0x3a
 2289 00b7 0B       		.uleb128 0xb
 2290 00b8 3B       		.uleb128 0x3b
 2291 00b9 05       		.uleb128 0x5
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 69


 2292 00ba 27       		.uleb128 0x27
 2293 00bb 19       		.uleb128 0x19
 2294 00bc 11       		.uleb128 0x11
 2295 00bd 01       		.uleb128 0x1
 2296 00be 12       		.uleb128 0x12
 2297 00bf 06       		.uleb128 0x6
 2298 00c0 40       		.uleb128 0x40
 2299 00c1 18       		.uleb128 0x18
 2300 00c2 9742     		.uleb128 0x2117
 2301 00c4 19       		.uleb128 0x19
 2302 00c5 01       		.uleb128 0x1
 2303 00c6 13       		.uleb128 0x13
 2304 00c7 00       		.byte	0
 2305 00c8 00       		.byte	0
 2306 00c9 0E       		.uleb128 0xe
 2307 00ca 05       		.uleb128 0x5
 2308 00cb 00       		.byte	0
 2309 00cc 03       		.uleb128 0x3
 2310 00cd 0E       		.uleb128 0xe
 2311 00ce 3A       		.uleb128 0x3a
 2312 00cf 0B       		.uleb128 0xb
 2313 00d0 3B       		.uleb128 0x3b
 2314 00d1 05       		.uleb128 0x5
 2315 00d2 49       		.uleb128 0x49
 2316 00d3 13       		.uleb128 0x13
 2317 00d4 02       		.uleb128 0x2
 2318 00d5 18       		.uleb128 0x18
 2319 00d6 00       		.byte	0
 2320 00d7 00       		.byte	0
 2321 00d8 0F       		.uleb128 0xf
 2322 00d9 2E       		.uleb128 0x2e
 2323 00da 01       		.byte	0x1
 2324 00db 3F       		.uleb128 0x3f
 2325 00dc 19       		.uleb128 0x19
 2326 00dd 03       		.uleb128 0x3
 2327 00de 0E       		.uleb128 0xe
 2328 00df 3A       		.uleb128 0x3a
 2329 00e0 0B       		.uleb128 0xb
 2330 00e1 3B       		.uleb128 0x3b
 2331 00e2 05       		.uleb128 0x5
 2332 00e3 27       		.uleb128 0x27
 2333 00e4 19       		.uleb128 0x19
 2334 00e5 49       		.uleb128 0x49
 2335 00e6 13       		.uleb128 0x13
 2336 00e7 11       		.uleb128 0x11
 2337 00e8 01       		.uleb128 0x1
 2338 00e9 12       		.uleb128 0x12
 2339 00ea 06       		.uleb128 0x6
 2340 00eb 40       		.uleb128 0x40
 2341 00ec 18       		.uleb128 0x18
 2342 00ed 9742     		.uleb128 0x2117
 2343 00ef 19       		.uleb128 0x19
 2344 00f0 01       		.uleb128 0x1
 2345 00f1 13       		.uleb128 0x13
 2346 00f2 00       		.byte	0
 2347 00f3 00       		.byte	0
 2348 00f4 10       		.uleb128 0x10
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 70


 2349 00f5 34       		.uleb128 0x34
 2350 00f6 00       		.byte	0
 2351 00f7 03       		.uleb128 0x3
 2352 00f8 0E       		.uleb128 0xe
 2353 00f9 3A       		.uleb128 0x3a
 2354 00fa 0B       		.uleb128 0xb
 2355 00fb 3B       		.uleb128 0x3b
 2356 00fc 05       		.uleb128 0x5
 2357 00fd 49       		.uleb128 0x49
 2358 00fe 13       		.uleb128 0x13
 2359 00ff 02       		.uleb128 0x2
 2360 0100 17       		.uleb128 0x17
 2361 0101 00       		.byte	0
 2362 0102 00       		.byte	0
 2363 0103 11       		.uleb128 0x11
 2364 0104 34       		.uleb128 0x34
 2365 0105 00       		.byte	0
 2366 0106 03       		.uleb128 0x3
 2367 0107 0E       		.uleb128 0xe
 2368 0108 3A       		.uleb128 0x3a
 2369 0109 0B       		.uleb128 0xb
 2370 010a 3B       		.uleb128 0x3b
 2371 010b 05       		.uleb128 0x5
 2372 010c 49       		.uleb128 0x49
 2373 010d 13       		.uleb128 0x13
 2374 010e 02       		.uleb128 0x2
 2375 010f 18       		.uleb128 0x18
 2376 0110 00       		.byte	0
 2377 0111 00       		.byte	0
 2378 0112 12       		.uleb128 0x12
 2379 0113 05       		.uleb128 0x5
 2380 0114 00       		.byte	0
 2381 0115 03       		.uleb128 0x3
 2382 0116 0E       		.uleb128 0xe
 2383 0117 3A       		.uleb128 0x3a
 2384 0118 0B       		.uleb128 0xb
 2385 0119 3B       		.uleb128 0x3b
 2386 011a 05       		.uleb128 0x5
 2387 011b 49       		.uleb128 0x49
 2388 011c 13       		.uleb128 0x13
 2389 011d 02       		.uleb128 0x2
 2390 011e 17       		.uleb128 0x17
 2391 011f 00       		.byte	0
 2392 0120 00       		.byte	0
 2393 0121 13       		.uleb128 0x13
 2394 0122 0F       		.uleb128 0xf
 2395 0123 00       		.byte	0
 2396 0124 0B       		.uleb128 0xb
 2397 0125 0B       		.uleb128 0xb
 2398 0126 49       		.uleb128 0x49
 2399 0127 13       		.uleb128 0x13
 2400 0128 00       		.byte	0
 2401 0129 00       		.byte	0
 2402 012a 14       		.uleb128 0x14
 2403 012b 26       		.uleb128 0x26
 2404 012c 00       		.byte	0
 2405 012d 49       		.uleb128 0x49
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 71


 2406 012e 13       		.uleb128 0x13
 2407 012f 00       		.byte	0
 2408 0130 00       		.byte	0
 2409 0131 15       		.uleb128 0x15
 2410 0132 0B       		.uleb128 0xb
 2411 0133 01       		.byte	0x1
 2412 0134 11       		.uleb128 0x11
 2413 0135 01       		.uleb128 0x1
 2414 0136 12       		.uleb128 0x12
 2415 0137 06       		.uleb128 0x6
 2416 0138 00       		.byte	0
 2417 0139 00       		.byte	0
 2418 013a 16       		.uleb128 0x16
 2419 013b 34       		.uleb128 0x34
 2420 013c 00       		.byte	0
 2421 013d 03       		.uleb128 0x3
 2422 013e 0E       		.uleb128 0xe
 2423 013f 3A       		.uleb128 0x3a
 2424 0140 0B       		.uleb128 0xb
 2425 0141 3B       		.uleb128 0x3b
 2426 0142 0B       		.uleb128 0xb
 2427 0143 49       		.uleb128 0x49
 2428 0144 13       		.uleb128 0x13
 2429 0145 3F       		.uleb128 0x3f
 2430 0146 19       		.uleb128 0x19
 2431 0147 02       		.uleb128 0x2
 2432 0148 18       		.uleb128 0x18
 2433 0149 00       		.byte	0
 2434 014a 00       		.byte	0
 2435 014b 17       		.uleb128 0x17
 2436 014c 01       		.uleb128 0x1
 2437 014d 01       		.byte	0x1
 2438 014e 49       		.uleb128 0x49
 2439 014f 13       		.uleb128 0x13
 2440 0150 01       		.uleb128 0x1
 2441 0151 13       		.uleb128 0x13
 2442 0152 00       		.byte	0
 2443 0153 00       		.byte	0
 2444 0154 18       		.uleb128 0x18
 2445 0155 21       		.uleb128 0x21
 2446 0156 00       		.byte	0
 2447 0157 49       		.uleb128 0x49
 2448 0158 13       		.uleb128 0x13
 2449 0159 2F       		.uleb128 0x2f
 2450 015a 0B       		.uleb128 0xb
 2451 015b 00       		.byte	0
 2452 015c 00       		.byte	0
 2453 015d 19       		.uleb128 0x19
 2454 015e 2E       		.uleb128 0x2e
 2455 015f 00       		.byte	0
 2456 0160 3F       		.uleb128 0x3f
 2457 0161 19       		.uleb128 0x19
 2458 0162 3C       		.uleb128 0x3c
 2459 0163 19       		.uleb128 0x19
 2460 0164 6E       		.uleb128 0x6e
 2461 0165 0E       		.uleb128 0xe
 2462 0166 03       		.uleb128 0x3
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 72


 2463 0167 0E       		.uleb128 0xe
 2464 0168 3A       		.uleb128 0x3a
 2465 0169 0B       		.uleb128 0xb
 2466 016a 3B       		.uleb128 0x3b
 2467 016b 0B       		.uleb128 0xb
 2468 016c 00       		.byte	0
 2469 016d 00       		.byte	0
 2470 016e 00       		.byte	0
 2471              		.section	.debug_loc,"",%progbits
 2472              	.Ldebug_loc0:
 2473              	.LLST0:
 2474 0000 08000000 		.4byte	.LVL3
 2475 0004 38000000 		.4byte	.LVL6
 2476 0008 0100     		.2byte	0x1
 2477 000a 54       		.byte	0x54
 2478 000b 00000000 		.4byte	0
 2479 000f 00000000 		.4byte	0
 2480              	.LLST1:
 2481 0013 08000000 		.4byte	.LVL10
 2482 0017 38000000 		.4byte	.LVL13
 2483 001b 0100     		.2byte	0x1
 2484 001d 54       		.byte	0x54
 2485 001e 00000000 		.4byte	0
 2486 0022 00000000 		.4byte	0
 2487              	.LLST2:
 2488 0026 22000000 		.4byte	.LVL18
 2489 002a 40000000 		.4byte	.LVL24
 2490 002e 0100     		.2byte	0x1
 2491 0030 50       		.byte	0x50
 2492 0031 46000000 		.4byte	.LVL26
 2493 0035 64000000 		.4byte	.LFE7
 2494 0039 0100     		.2byte	0x1
 2495 003b 50       		.byte	0x50
 2496 003c 00000000 		.4byte	0
 2497 0040 00000000 		.4byte	0
 2498              	.LLST3:
 2499 0044 0C000000 		.4byte	.LVL16
 2500 0048 24000000 		.4byte	.LVL19
 2501 004c 0100     		.2byte	0x1
 2502 004e 53       		.byte	0x53
 2503 004f 24000000 		.4byte	.LVL19
 2504 0053 26000000 		.4byte	.LVL20
 2505 0057 0300     		.2byte	0x3
 2506 0059 73       		.byte	0x73
 2507 005a 7F       		.sleb128 -1
 2508 005b 9F       		.byte	0x9f
 2509 005c 26000000 		.4byte	.LVL20
 2510 0060 32000000 		.4byte	.LVL22
 2511 0064 0100     		.2byte	0x1
 2512 0066 53       		.byte	0x53
 2513 0067 32000000 		.4byte	.LVL22
 2514 006b 3E000000 		.4byte	.LVL23
 2515 006f 0500     		.2byte	0x5
 2516 0071 03       		.byte	0x3
 2517 0072 00000000 		.4byte	UART_rxBufferRead
 2518 0076 40000000 		.4byte	.LVL24
 2519 007a 42000000 		.4byte	.LVL25
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 73


 2520 007e 0100     		.2byte	0x1
 2521 0080 53       		.byte	0x53
 2522 0081 00000000 		.4byte	0
 2523 0085 00000000 		.4byte	0
 2524              	.LLST4:
 2525 0089 00000000 		.4byte	.LVL29
 2526 008d 22000000 		.4byte	.LVL32
 2527 0091 0200     		.2byte	0x2
 2528 0093 30       		.byte	0x30
 2529 0094 9F       		.byte	0x9f
 2530 0095 22000000 		.4byte	.LVL32
 2531 0099 40000000 		.4byte	.LVL38
 2532 009d 0100     		.2byte	0x1
 2533 009f 50       		.byte	0x50
 2534 00a0 40000000 		.4byte	.LVL38
 2535 00a4 52000000 		.4byte	.LVL41
 2536 00a8 0200     		.2byte	0x2
 2537 00aa 30       		.byte	0x30
 2538 00ab 9F       		.byte	0x9f
 2539 00ac 52000000 		.4byte	.LVL41
 2540 00b0 5A000000 		.4byte	.LVL42
 2541 00b4 0100     		.2byte	0x1
 2542 00b6 50       		.byte	0x50
 2543 00b7 5A000000 		.4byte	.LVL42
 2544 00bb 5E000000 		.4byte	.LVL43
 2545 00bf 0200     		.2byte	0x2
 2546 00c1 30       		.byte	0x30
 2547 00c2 9F       		.byte	0x9f
 2548 00c3 5E000000 		.4byte	.LVL43
 2549 00c7 80000000 		.4byte	.LFE9
 2550 00cb 0100     		.2byte	0x1
 2551 00cd 50       		.byte	0x50
 2552 00ce 00000000 		.4byte	0
 2553 00d2 00000000 		.4byte	0
 2554              	.LLST5:
 2555 00d6 46000000 		.4byte	.LVL40
 2556 00da 60000000 		.4byte	.LVL44
 2557 00de 0100     		.2byte	0x1
 2558 00e0 53       		.byte	0x53
 2559 00e1 00000000 		.4byte	0
 2560 00e5 00000000 		.4byte	0
 2561              	.LLST6:
 2562 00e9 0C000000 		.4byte	.LVL30
 2563 00ed 24000000 		.4byte	.LVL33
 2564 00f1 0100     		.2byte	0x1
 2565 00f3 53       		.byte	0x53
 2566 00f4 24000000 		.4byte	.LVL33
 2567 00f8 26000000 		.4byte	.LVL34
 2568 00fc 0300     		.2byte	0x3
 2569 00fe 73       		.byte	0x73
 2570 00ff 7F       		.sleb128 -1
 2571 0100 9F       		.byte	0x9f
 2572 0101 26000000 		.4byte	.LVL34
 2573 0105 32000000 		.4byte	.LVL36
 2574 0109 0100     		.2byte	0x1
 2575 010b 53       		.byte	0x53
 2576 010c 32000000 		.4byte	.LVL36
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 74


 2577 0110 3E000000 		.4byte	.LVL37
 2578 0114 0500     		.2byte	0x5
 2579 0116 03       		.byte	0x3
 2580 0117 00000000 		.4byte	UART_rxBufferRead
 2581 011b 40000000 		.4byte	.LVL38
 2582 011f 42000000 		.4byte	.LVL39
 2583 0123 0100     		.2byte	0x1
 2584 0125 53       		.byte	0x53
 2585 0126 00000000 		.4byte	0
 2586 012a 00000000 		.4byte	0
 2587              	.LLST7:
 2588 012e 0C000000 		.4byte	.LVL45
 2589 0132 16000000 		.4byte	.LVL46
 2590 0136 0100     		.2byte	0x1
 2591 0138 54       		.byte	0x54
 2592 0139 00000000 		.4byte	0
 2593 013d 00000000 		.4byte	0
 2594              	.LLST8:
 2595 0141 3A000000 		.4byte	.LVL48
 2596 0145 3C000000 		.4byte	.LVL49
 2597 0149 0100     		.2byte	0x1
 2598 014b 50       		.byte	0x50
 2599 014c 48000000 		.4byte	.LVL50
 2600 0150 4A000000 		.4byte	.LVL51
 2601 0154 0100     		.2byte	0x1
 2602 0156 50       		.byte	0x50
 2603 0157 4C000000 		.4byte	.LVL52
 2604 015b 60000000 		.4byte	.LFE11
 2605 015f 0100     		.2byte	0x1
 2606 0161 50       		.byte	0x50
 2607 0162 00000000 		.4byte	0
 2608 0166 00000000 		.4byte	0
 2609              	.LLST9:
 2610 016a 06000000 		.4byte	.LVL53
 2611 016e 1B000000 		.4byte	.LVL54-1
 2612 0172 0100     		.2byte	0x1
 2613 0174 50       		.byte	0x50
 2614 0175 00000000 		.4byte	0
 2615 0179 00000000 		.4byte	0
 2616              	.LLST10:
 2617 017d 00000000 		.4byte	.LVL61
 2618 0181 0A000000 		.4byte	.LVL63
 2619 0185 0100     		.2byte	0x1
 2620 0187 50       		.byte	0x50
 2621 0188 0A000000 		.4byte	.LVL63
 2622 018c 14000000 		.4byte	.LVL67
 2623 0190 0100     		.2byte	0x1
 2624 0192 55       		.byte	0x55
 2625 0193 14000000 		.4byte	.LVL67
 2626 0197 18000000 		.4byte	.LVL68
 2627 019b 0100     		.2byte	0x1
 2628 019d 50       		.byte	0x50
 2629 019e 18000000 		.4byte	.LVL68
 2630 01a2 20000000 		.4byte	.LVL69
 2631 01a6 0100     		.2byte	0x1
 2632 01a8 55       		.byte	0x55
 2633 01a9 20000000 		.4byte	.LVL69
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 75


 2634 01ad 24000000 		.4byte	.LFE20
 2635 01b1 0400     		.2byte	0x4
 2636 01b3 F3       		.byte	0xf3
 2637 01b4 01       		.uleb128 0x1
 2638 01b5 50       		.byte	0x50
 2639 01b6 9F       		.byte	0x9f
 2640 01b7 00000000 		.4byte	0
 2641 01bb 00000000 		.4byte	0
 2642              	.LLST11:
 2643 01bf 02000000 		.4byte	.LVL62
 2644 01c3 0A000000 		.4byte	.LVL63
 2645 01c7 0200     		.2byte	0x2
 2646 01c9 30       		.byte	0x30
 2647 01ca 9F       		.byte	0x9f
 2648 01cb 0A000000 		.4byte	.LVL63
 2649 01cf 10000000 		.4byte	.LVL65
 2650 01d3 0100     		.2byte	0x1
 2651 01d5 54       		.byte	0x54
 2652 01d6 12000000 		.4byte	.LVL66
 2653 01da 14000000 		.4byte	.LVL67
 2654 01de 0100     		.2byte	0x1
 2655 01e0 54       		.byte	0x54
 2656 01e1 14000000 		.4byte	.LVL67
 2657 01e5 18000000 		.4byte	.LVL68
 2658 01e9 0200     		.2byte	0x2
 2659 01eb 30       		.byte	0x30
 2660 01ec 9F       		.byte	0x9f
 2661 01ed 18000000 		.4byte	.LVL68
 2662 01f1 20000000 		.4byte	.LVL69
 2663 01f5 0100     		.2byte	0x1
 2664 01f7 54       		.byte	0x54
 2665 01f8 00000000 		.4byte	0
 2666 01fc 00000000 		.4byte	0
 2667              	.LLST12:
 2668 0200 00000000 		.4byte	.LVL70
 2669 0204 08000000 		.4byte	.LVL71
 2670 0208 0100     		.2byte	0x1
 2671 020a 50       		.byte	0x50
 2672 020b 08000000 		.4byte	.LVL71
 2673 020f 14000000 		.4byte	.LVL75
 2674 0213 0100     		.2byte	0x1
 2675 0215 56       		.byte	0x56
 2676 0216 14000000 		.4byte	.LVL75
 2677 021a 1C000000 		.4byte	.LVL76
 2678 021e 0100     		.2byte	0x1
 2679 0220 50       		.byte	0x50
 2680 0221 1C000000 		.4byte	.LVL76
 2681 0225 22000000 		.4byte	.LVL77
 2682 0229 0100     		.2byte	0x1
 2683 022b 56       		.byte	0x56
 2684 022c 22000000 		.4byte	.LVL77
 2685 0230 28000000 		.4byte	.LFE21
 2686 0234 0400     		.2byte	0x4
 2687 0236 F3       		.byte	0xf3
 2688 0237 01       		.uleb128 0x1
 2689 0238 50       		.byte	0x50
 2690 0239 9F       		.byte	0x9f
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 76


 2691 023a 00000000 		.4byte	0
 2692 023e 00000000 		.4byte	0
 2693              	.LLST13:
 2694 0242 00000000 		.4byte	.LVL70
 2695 0246 08000000 		.4byte	.LVL71
 2696 024a 0100     		.2byte	0x1
 2697 024c 51       		.byte	0x51
 2698 024d 08000000 		.4byte	.LVL71
 2699 0251 14000000 		.4byte	.LVL75
 2700 0255 0400     		.2byte	0x4
 2701 0257 F3       		.byte	0xf3
 2702 0258 01       		.uleb128 0x1
 2703 0259 51       		.byte	0x51
 2704 025a 9F       		.byte	0x9f
 2705 025b 14000000 		.4byte	.LVL75
 2706 025f 1C000000 		.4byte	.LVL76
 2707 0263 0100     		.2byte	0x1
 2708 0265 51       		.byte	0x51
 2709 0266 1C000000 		.4byte	.LVL76
 2710 026a 28000000 		.4byte	.LFE21
 2711 026e 0400     		.2byte	0x4
 2712 0270 F3       		.byte	0xf3
 2713 0271 01       		.uleb128 0x1
 2714 0272 51       		.byte	0x51
 2715 0273 9F       		.byte	0x9f
 2716 0274 00000000 		.4byte	0
 2717 0278 00000000 		.4byte	0
 2718              	.LLST14:
 2719 027c 00000000 		.4byte	.LVL70
 2720 0280 08000000 		.4byte	.LVL71
 2721 0284 0200     		.2byte	0x2
 2722 0286 30       		.byte	0x30
 2723 0287 9F       		.byte	0x9f
 2724 0288 08000000 		.4byte	.LVL71
 2725 028c 10000000 		.4byte	.LVL73
 2726 0290 0100     		.2byte	0x1
 2727 0292 54       		.byte	0x54
 2728 0293 12000000 		.4byte	.LVL74
 2729 0297 14000000 		.4byte	.LVL75
 2730 029b 0100     		.2byte	0x1
 2731 029d 54       		.byte	0x54
 2732 029e 14000000 		.4byte	.LVL75
 2733 02a2 1C000000 		.4byte	.LVL76
 2734 02a6 0200     		.2byte	0x2
 2735 02a8 30       		.byte	0x30
 2736 02a9 9F       		.byte	0x9f
 2737 02aa 1C000000 		.4byte	.LVL76
 2738 02ae 22000000 		.4byte	.LVL77
 2739 02b2 0100     		.2byte	0x1
 2740 02b4 54       		.byte	0x54
 2741 02b5 00000000 		.4byte	0
 2742 02b9 00000000 		.4byte	0
 2743              	.LLST15:
 2744 02bd 00000000 		.4byte	.LVL78
 2745 02c1 0B000000 		.4byte	.LVL79-1
 2746 02c5 0100     		.2byte	0x1
 2747 02c7 50       		.byte	0x50
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 77


 2748 02c8 0B000000 		.4byte	.LVL79-1
 2749 02cc 20000000 		.4byte	.LFE22
 2750 02d0 0400     		.2byte	0x4
 2751 02d2 F3       		.byte	0xf3
 2752 02d3 01       		.uleb128 0x1
 2753 02d4 50       		.byte	0x50
 2754 02d5 9F       		.byte	0x9f
 2755 02d6 00000000 		.4byte	0
 2756 02da 00000000 		.4byte	0
 2757              	.LLST16:
 2758 02de 06000000 		.4byte	.LVL82
 2759 02e2 1C000000 		.4byte	.LVL83
 2760 02e6 0100     		.2byte	0x1
 2761 02e8 53       		.byte	0x53
 2762 02e9 1C000000 		.4byte	.LVL83
 2763 02ed 24000000 		.4byte	.LFE23
 2764 02f1 0100     		.2byte	0x1
 2765 02f3 50       		.byte	0x50
 2766 02f4 00000000 		.4byte	0
 2767 02f8 00000000 		.4byte	0
 2768              	.LLST17:
 2769 02fc 06000000 		.4byte	.LVL84
 2770 0300 1B000000 		.4byte	.LVL85-1
 2771 0304 0100     		.2byte	0x1
 2772 0306 50       		.byte	0x50
 2773 0307 00000000 		.4byte	0
 2774 030b 00000000 		.4byte	0
 2775              	.LLST18:
 2776 030f 00000000 		.4byte	.LVL86
 2777 0313 3C000000 		.4byte	.LVL91
 2778 0317 0100     		.2byte	0x1
 2779 0319 50       		.byte	0x50
 2780 031a 3C000000 		.4byte	.LVL91
 2781 031e 58000000 		.4byte	.LFE25
 2782 0322 0400     		.2byte	0x4
 2783 0324 F3       		.byte	0xf3
 2784 0325 01       		.uleb128 0x1
 2785 0326 50       		.byte	0x50
 2786 0327 9F       		.byte	0x9f
 2787 0328 00000000 		.4byte	0
 2788 032c 00000000 		.4byte	0
 2789              	.LLST19:
 2790 0330 22000000 		.4byte	.LVL87
 2791 0334 28000000 		.4byte	.LVL88
 2792 0338 0100     		.2byte	0x1
 2793 033a 53       		.byte	0x53
 2794 033b 34000000 		.4byte	.LVL89
 2795 033f 3A000000 		.4byte	.LVL90
 2796 0343 0100     		.2byte	0x1
 2797 0345 53       		.byte	0x53
 2798 0346 00000000 		.4byte	0
 2799 034a 00000000 		.4byte	0
 2800              		.section	.debug_aranges,"",%progbits
 2801 0000 EC000000 		.4byte	0xec
 2802 0004 0200     		.2byte	0x2
 2803 0006 00000000 		.4byte	.Ldebug_info0
 2804 000a 04       		.byte	0x4
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 78


 2805 000b 00       		.byte	0
 2806 000c 0000     		.2byte	0
 2807 000e 0000     		.2byte	0
 2808 0010 00000000 		.4byte	.LFB1
 2809 0014 44000000 		.4byte	.LFE1-.LFB1
 2810 0018 00000000 		.4byte	.LFB2
 2811 001c 44000000 		.4byte	.LFE2-.LFB2
 2812 0020 00000000 		.4byte	.LFB0
 2813 0024 1C000000 		.4byte	.LFE0-.LFB0
 2814 0028 00000000 		.4byte	.LFB3
 2815 002c 48000000 		.4byte	.LFE3-.LFB3
 2816 0030 00000000 		.4byte	.LFB4
 2817 0034 04000000 		.4byte	.LFE4-.LFB4
 2818 0038 00000000 		.4byte	.LFB5
 2819 003c 02000000 		.4byte	.LFE5-.LFB5
 2820 0040 00000000 		.4byte	.LFB6
 2821 0044 0C000000 		.4byte	.LFE6-.LFB6
 2822 0048 00000000 		.4byte	.LFB7
 2823 004c 64000000 		.4byte	.LFE7-.LFB7
 2824 0050 00000000 		.4byte	.LFB8
 2825 0054 28000000 		.4byte	.LFE8-.LFB8
 2826 0058 00000000 		.4byte	.LFB9
 2827 005c 80000000 		.4byte	.LFE9-.LFB9
 2828 0060 00000000 		.4byte	.LFB10
 2829 0064 2C000000 		.4byte	.LFE10-.LFB10
 2830 0068 00000000 		.4byte	.LFB11
 2831 006c 60000000 		.4byte	.LFE11-.LFB11
 2832 0070 00000000 		.4byte	.LFB12
 2833 0074 44000000 		.4byte	.LFE12-.LFB12
 2834 0078 00000000 		.4byte	.LFB13
 2835 007c 02000000 		.4byte	.LFE13-.LFB13
 2836 0080 00000000 		.4byte	.LFB14
 2837 0084 0C000000 		.4byte	.LFE14-.LFB14
 2838 0088 00000000 		.4byte	.LFB15
 2839 008c 0C000000 		.4byte	.LFE15-.LFB15
 2840 0090 00000000 		.4byte	.LFB16
 2841 0094 0C000000 		.4byte	.LFE16-.LFB16
 2842 0098 00000000 		.4byte	.LFB17
 2843 009c 14000000 		.4byte	.LFE17-.LFB17
 2844 00a0 00000000 		.4byte	.LFB18
 2845 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2846 00a8 00000000 		.4byte	.LFB19
 2847 00ac 18000000 		.4byte	.LFE19-.LFB19
 2848 00b0 00000000 		.4byte	.LFB20
 2849 00b4 24000000 		.4byte	.LFE20-.LFB20
 2850 00b8 00000000 		.4byte	.LFB21
 2851 00bc 28000000 		.4byte	.LFE21-.LFB21
 2852 00c0 00000000 		.4byte	.LFB22
 2853 00c4 20000000 		.4byte	.LFE22-.LFB22
 2854 00c8 00000000 		.4byte	.LFB23
 2855 00cc 24000000 		.4byte	.LFE23-.LFB23
 2856 00d0 00000000 		.4byte	.LFB24
 2857 00d4 24000000 		.4byte	.LFE24-.LFB24
 2858 00d8 00000000 		.4byte	.LFB25
 2859 00dc 58000000 		.4byte	.LFE25-.LFB25
 2860 00e0 00000000 		.4byte	.LFB26
 2861 00e4 02000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 79


 2862 00e8 00000000 		.4byte	0
 2863 00ec 00000000 		.4byte	0
 2864              		.section	.debug_ranges,"",%progbits
 2865              	.Ldebug_ranges0:
 2866 0000 00000000 		.4byte	.LFB1
 2867 0004 44000000 		.4byte	.LFE1
 2868 0008 00000000 		.4byte	.LFB2
 2869 000c 44000000 		.4byte	.LFE2
 2870 0010 00000000 		.4byte	.LFB0
 2871 0014 1C000000 		.4byte	.LFE0
 2872 0018 00000000 		.4byte	.LFB3
 2873 001c 48000000 		.4byte	.LFE3
 2874 0020 00000000 		.4byte	.LFB4
 2875 0024 04000000 		.4byte	.LFE4
 2876 0028 00000000 		.4byte	.LFB5
 2877 002c 02000000 		.4byte	.LFE5
 2878 0030 00000000 		.4byte	.LFB6
 2879 0034 0C000000 		.4byte	.LFE6
 2880 0038 00000000 		.4byte	.LFB7
 2881 003c 64000000 		.4byte	.LFE7
 2882 0040 00000000 		.4byte	.LFB8
 2883 0044 28000000 		.4byte	.LFE8
 2884 0048 00000000 		.4byte	.LFB9
 2885 004c 80000000 		.4byte	.LFE9
 2886 0050 00000000 		.4byte	.LFB10
 2887 0054 2C000000 		.4byte	.LFE10
 2888 0058 00000000 		.4byte	.LFB11
 2889 005c 60000000 		.4byte	.LFE11
 2890 0060 00000000 		.4byte	.LFB12
 2891 0064 44000000 		.4byte	.LFE12
 2892 0068 00000000 		.4byte	.LFB13
 2893 006c 02000000 		.4byte	.LFE13
 2894 0070 00000000 		.4byte	.LFB14
 2895 0074 0C000000 		.4byte	.LFE14
 2896 0078 00000000 		.4byte	.LFB15
 2897 007c 0C000000 		.4byte	.LFE15
 2898 0080 00000000 		.4byte	.LFB16
 2899 0084 0C000000 		.4byte	.LFE16
 2900 0088 00000000 		.4byte	.LFB17
 2901 008c 14000000 		.4byte	.LFE17
 2902 0090 00000000 		.4byte	.LFB18
 2903 0094 0C000000 		.4byte	.LFE18
 2904 0098 00000000 		.4byte	.LFB19
 2905 009c 18000000 		.4byte	.LFE19
 2906 00a0 00000000 		.4byte	.LFB20
 2907 00a4 24000000 		.4byte	.LFE20
 2908 00a8 00000000 		.4byte	.LFB21
 2909 00ac 28000000 		.4byte	.LFE21
 2910 00b0 00000000 		.4byte	.LFB22
 2911 00b4 20000000 		.4byte	.LFE22
 2912 00b8 00000000 		.4byte	.LFB23
 2913 00bc 24000000 		.4byte	.LFE23
 2914 00c0 00000000 		.4byte	.LFB24
 2915 00c4 24000000 		.4byte	.LFE24
 2916 00c8 00000000 		.4byte	.LFB25
 2917 00cc 58000000 		.4byte	.LFE25
 2918 00d0 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 80


 2919 00d4 02000000 		.4byte	.LFE26
 2920 00d8 00000000 		.4byte	0
 2921 00dc 00000000 		.4byte	0
 2922              		.section	.debug_line,"",%progbits
 2923              	.Ldebug_line0:
 2924 0000 FE020000 		.section	.debug_str,"MS",%progbits,1
 2924      02005F00 
 2924      00000201 
 2924      FB0E0D00 
 2924      01010101 
 2925              	.LASF10:
 2926 0000 75696E74 		.ascii	"uint16\000"
 2926      313600
 2927              	.LASF77:
 2928 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2928      69744372 
 2928      69746963 
 2928      616C5365 
 2928      6374696F 
 2929              	.LASF49:
 2930 001d 74784461 		.ascii	"txDataByte\000"
 2930      74614279 
 2930      746500
 2931              	.LASF54:
 2932 0028 73747269 		.ascii	"string\000"
 2932      6E6700
 2933              	.LASF7:
 2934 002f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2934      206C6F6E 
 2934      6720756E 
 2934      7369676E 
 2934      65642069 
 2935              	.LASF22:
 2936 0046 55415254 		.ascii	"UART_Start\000"
 2936      5F537461 
 2936      727400
 2937              	.LASF47:
 2938 0051 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2938      5F536574 
 2938      5478496E 
 2938      74657272 
 2938      7570744D 
 2939              	.LASF81:
 2940 0069 443A5C68 		.ascii	"D:\\h_da\\Lecturs\\Basic Embedded\\Embedded_basics\\"
 2940      5F64615C 
 2940      4C656374 
 2940      7572735C 
 2940      42617369 
 2941 0098 31315F55 		.ascii	"11_UART_without_swbuffer_talkback_capitalize.cydsn\000"
 2941      4152545F 
 2941      77697468 
 2941      6F75745F 
 2941      73776275 
 2942              	.LASF72:
 2943 00cb 55415254 		.ascii	"UART_rxBufferOverflow\000"
 2943      5F727842 
 2943      75666665 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 81


 2943      724F7665 
 2943      72666C6F 
 2944              	.LASF6:
 2945 00e1 6C6F6E67 		.ascii	"long long int\000"
 2945      206C6F6E 
 2945      6720696E 
 2945      7400
 2946              	.LASF0:
 2947 00ef 7369676E 		.ascii	"signed char\000"
 2947      65642063 
 2947      68617200 
 2948              	.LASF64:
 2949 00fb 74785065 		.ascii	"txPeriod\000"
 2949      72696F64 
 2949      00
 2950              	.LASF4:
 2951 0104 6C6F6E67 		.ascii	"long int\000"
 2951      20696E74 
 2951      00
 2952              	.LASF52:
 2953 010d 55415254 		.ascii	"UART_PutChar\000"
 2953      5F507574 
 2953      43686172 
 2953      00
 2954              	.LASF32:
 2955 011a 55415254 		.ascii	"UART_ReadRxData\000"
 2955      5F526561 
 2955      64527844 
 2955      61746100 
 2956              	.LASF9:
 2957 012a 75696E74 		.ascii	"uint8\000"
 2957      3800
 2958              	.LASF50:
 2959 0130 55415254 		.ascii	"UART_ReadControlRegister\000"
 2959      5F526561 
 2959      64436F6E 
 2959      74726F6C 
 2959      52656769 
 2960              	.LASF13:
 2961 0149 646F7562 		.ascii	"double\000"
 2961      6C6500
 2962              	.LASF43:
 2963 0150 61646472 		.ascii	"addressMode\000"
 2963      6573734D 
 2963      6F646500 
 2964              	.LASF70:
 2965 015c 55415254 		.ascii	"UART_rxBufferWrite\000"
 2965      5F727842 
 2965      75666665 
 2965      72577269 
 2965      746500
 2966              	.LASF11:
 2967 016f 75696E74 		.ascii	"uint32\000"
 2967      333200
 2968              	.LASF73:
 2969 0176 4379496E 		.ascii	"CyIntSetVector\000"
 2969      74536574 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 82


 2969      56656374 
 2969      6F7200
 2970              	.LASF27:
 2971 0185 636F6E74 		.ascii	"control\000"
 2971      726F6C00 
 2972              	.LASF20:
 2973 018d 55415254 		.ascii	"UART_Init\000"
 2973      5F496E69 
 2973      7400
 2974              	.LASF62:
 2975 0197 7265744D 		.ascii	"retMode\000"
 2975      6F646500 
 2976              	.LASF37:
 2977 019f 55415254 		.ascii	"UART_GetByte\000"
 2977      5F476574 
 2977      42797465 
 2977      00
 2978              	.LASF8:
 2979 01ac 756E7369 		.ascii	"unsigned int\000"
 2979      676E6564 
 2979      20696E74 
 2979      00
 2980              	.LASF60:
 2981 01b9 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2981      5F436C65 
 2981      61725478 
 2981      42756666 
 2981      657200
 2982              	.LASF58:
 2983 01cc 55415254 		.ascii	"UART_PutCRLF\000"
 2983      5F507574 
 2983      43524C46 
 2983      00
 2984              	.LASF38:
 2985 01d9 6C6F6345 		.ascii	"locErrorStatus\000"
 2985      72726F72 
 2985      53746174 
 2985      757300
 2986              	.LASF5:
 2987 01e8 6C6F6E67 		.ascii	"long unsigned int\000"
 2987      20756E73 
 2987      69676E65 
 2987      6420696E 
 2987      7400
 2988              	.LASF56:
 2989 01fa 55415254 		.ascii	"UART_PutArray\000"
 2989      5F507574 
 2989      41727261 
 2989      7900
 2990              	.LASF75:
 2991 0208 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2991      74657243 
 2991      72697469 
 2991      63616C53 
 2991      65637469 
 2992              	.LASF71:
 2993 021f 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 83


 2993      5F727842 
 2993      75666665 
 2993      724C6F6F 
 2993      70446574 
 2994              	.LASF40:
 2995 0237 73697A65 		.ascii	"size\000"
 2995      00
 2996              	.LASF3:
 2997 023c 73686F72 		.ascii	"short unsigned int\000"
 2997      7420756E 
 2997      7369676E 
 2997      65642069 
 2997      6E7400
 2998              	.LASF69:
 2999 024f 55415254 		.ascii	"UART_rxBufferRead\000"
 2999      5F727842 
 2999      75666665 
 2999      72526561 
 2999      6400
 3000              	.LASF55:
 3001 0261 62756649 		.ascii	"bufIndex\000"
 3001      6E646578 
 3001      00
 3002              	.LASF28:
 3003 026a 696E7453 		.ascii	"intSrc\000"
 3003      726300
 3004              	.LASF65:
 3005 0271 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3005      5F536574 
 3005      54784164 
 3005      64726573 
 3005      734D6F64 
 3006              	.LASF51:
 3007 0287 55415254 		.ascii	"UART_ReadTxStatus\000"
 3007      5F526561 
 3007      64547853 
 3007      74617475 
 3007      7300
 3008              	.LASF76:
 3009 0299 55415254 		.ascii	"UART_IntClock_Start\000"
 3009      5F496E74 
 3009      436C6F63 
 3009      6B5F5374 
 3009      61727400 
 3010              	.LASF17:
 3011 02ad 72656733 		.ascii	"reg32\000"
 3011      3200
 3012              	.LASF63:
 3013 02b3 746D7053 		.ascii	"tmpStat\000"
 3013      74617400 
 3014              	.LASF19:
 3015 02bb 73697A65 		.ascii	"sizetype\000"
 3015      74797065 
 3015      00
 3016              	.LASF18:
 3017 02c4 6C6F6E67 		.ascii	"long double\000"
 3017      20646F75 
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 84


 3017      626C6500 
 3018              	.LASF45:
 3019 02d0 61646472 		.ascii	"address\000"
 3019      65737300 
 3020              	.LASF44:
 3021 02d8 55415254 		.ascii	"UART_SetRxAddress1\000"
 3021      5F536574 
 3021      52784164 
 3021      64726573 
 3021      733100
 3022              	.LASF46:
 3023 02eb 55415254 		.ascii	"UART_SetRxAddress2\000"
 3023      5F536574 
 3023      52784164 
 3023      64726573 
 3023      733200
 3024              	.LASF31:
 3025 02fe 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3025      78427566 
 3025      66657257 
 3025      72697465 
 3025      00
 3026              	.LASF36:
 3027 030f 72785374 		.ascii	"rxStatus\000"
 3027      61747573 
 3027      00
 3028              	.LASF78:
 3029 0318 55415254 		.ascii	"UART_IntClock_Stop\000"
 3029      5F496E74 
 3029      436C6F63 
 3029      6B5F5374 
 3029      6F7000
 3030              	.LASF74:
 3031 032b 4379496E 		.ascii	"CyIntSetPriority\000"
 3031      74536574 
 3031      5072696F 
 3031      72697479 
 3031      00
 3032              	.LASF67:
 3033 033c 55415254 		.ascii	"UART_errorStatus\000"
 3033      5F657272 
 3033      6F725374 
 3033      61747573 
 3033      00
 3034              	.LASF80:
 3035 034d 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 3035      72617465 
 3035      645F536F 
 3035      75726365 
 3035      5C50536F 
 3036              	.LASF59:
 3037 036b 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3037      5F476574 
 3037      54784275 
 3037      66666572 
 3037      53697A65 
 3038              	.LASF16:
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 85


 3039 0380 72656738 		.ascii	"reg8\000"
 3039      00
 3040              	.LASF42:
 3041 0385 55415254 		.ascii	"UART_SetRxAddressMode\000"
 3041      5F536574 
 3041      52784164 
 3041      64726573 
 3041      734D6F64 
 3042              	.LASF1:
 3043 039b 756E7369 		.ascii	"unsigned char\000"
 3043      676E6564 
 3043      20636861 
 3043      7200
 3044              	.LASF48:
 3045 03a9 55415254 		.ascii	"UART_WriteTxData\000"
 3045      5F577269 
 3045      74655478 
 3045      44617461 
 3045      00
 3046              	.LASF2:
 3047 03ba 73686F72 		.ascii	"short int\000"
 3047      7420696E 
 3047      7400
 3048              	.LASF61:
 3049 03c4 55415254 		.ascii	"UART_SendBreak\000"
 3049      5F53656E 
 3049      64427265 
 3049      616B00
 3050              	.LASF79:
 3051 03d3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3051      43313120 
 3051      352E342E 
 3051      31203230 
 3051      31363036 
 3052 0406 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3052      20726576 
 3052      6973696F 
 3052      6E203233 
 3052      37373135 
 3053 0439 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3053      66756E63 
 3053      74696F6E 
 3053      2D736563 
 3053      74696F6E 
 3054              	.LASF57:
 3055 0461 62797465 		.ascii	"byteCount\000"
 3055      436F756E 
 3055      7400
 3056              	.LASF29:
 3057 046b 72784461 		.ascii	"rxData\000"
 3057      746100
 3058              	.LASF21:
 3059 0472 55415254 		.ascii	"UART_Enable\000"
 3059      5F456E61 
 3059      626C6500 
 3060              	.LASF33:
 3061 047e 55415254 		.ascii	"UART_ReadRxStatus\000"
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 86


 3061      5F526561 
 3061      64527853 
 3061      74617475 
 3061      7300
 3062              	.LASF15:
 3063 0490 63686172 		.ascii	"char\000"
 3063      00
 3064              	.LASF14:
 3065 0495 63686172 		.ascii	"char8\000"
 3065      3800
 3066              	.LASF26:
 3067 049b 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3067      5F536574 
 3067      5278496E 
 3067      74657272 
 3067      7570744D 
 3068              	.LASF35:
 3069 04b3 55415254 		.ascii	"UART_GetChar\000"
 3069      5F476574 
 3069      43686172 
 3069      00
 3070              	.LASF30:
 3071 04c0 6C6F6352 		.ascii	"locRxBufferRead\000"
 3071      78427566 
 3071      66657252 
 3071      65616400 
 3072              	.LASF24:
 3073 04d0 656E6162 		.ascii	"enableInterrupts\000"
 3073      6C65496E 
 3073      74657272 
 3073      75707473 
 3073      00
 3074              	.LASF66:
 3075 04e1 55415254 		.ascii	"UART_initVar\000"
 3075      5F696E69 
 3075      74566172 
 3075      00
 3076              	.LASF39:
 3077 04ee 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3077      5F476574 
 3077      52784275 
 3077      66666572 
 3077      53697A65 
 3078              	.LASF34:
 3079 0503 73746174 		.ascii	"status\000"
 3079      757300
 3080              	.LASF23:
 3081 050a 55415254 		.ascii	"UART_Stop\000"
 3081      5F53746F 
 3081      7000
 3082              	.LASF68:
 3083 0514 55415254 		.ascii	"UART_rxBuffer\000"
 3083      5F727842 
 3083      75666665 
 3083      7200
 3084              	.LASF12:
 3085 0522 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\swaga\AppData\Local\Temp\ccMwE7sk.s 			page 87


 3085      7400
 3086              	.LASF53:
 3087 0528 55415254 		.ascii	"UART_PutString\000"
 3087      5F507574 
 3087      53747269 
 3087      6E6700
 3088              	.LASF25:
 3089 0537 55415254 		.ascii	"UART_WriteControlRegister\000"
 3089      5F577269 
 3089      7465436F 
 3089      6E74726F 
 3089      6C526567 
 3090              	.LASF41:
 3091 0551 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3091      5F436C65 
 3091      61725278 
 3091      42756666 
 3091      657200
 3092              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
